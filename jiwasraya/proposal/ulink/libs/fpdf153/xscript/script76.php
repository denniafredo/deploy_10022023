<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Memory optimization</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY ONLOAD="if(window.focus) window.focus()">
<H2>Memory optimization</H2>
<H4 CLASS="st">Informations</H4>Author: <SCRIPT TYPE="text/javascript">document.write('<A H'+'REF="m'+'ailto:oliver'+'&#'+'64;'+'fpdf.org?subject=Memory%20optimization">');</SCRIPT>Olivier<SCRIPT TYPE="text/javascript">document.write('<\/A>');</SCRIPT><BR>License: Freeware
<H4 CLASS="st">Description</H4>The standard FPDF class builds the document entirely in memory, which can be problematic for large documents.
This extension saves the pages to the destination file as soon as they are finished, which solves the memory issue.<BR>
<BR>
After you have created the object, call <TT>Open()</TT> with the name of the file:<BR>
<BR>
<TT>$pdf=new FPDF2File();</TT><BR>
<TT>$pdf->Open('doc.pdf');</TT><BR>
<BR>
and when the document is finished, call Output():<BR>
<BR>
<TT>$pdf->Output();</TT><BR>
<BR>
<B>Note:</B> you can't use the <TT>AliasNbPages()</TT> method with this extension.
<H4 CLASS="st">Source</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'fpdf.php'</font><font class="kw">);<br><br>class </font>FPDF2File <font class="kw">extends </font>FPDF<br><font class="kw">{<br>var </font>$f<font class="kw">;<br><br>function </font>Open<font class="kw">(</font>$file<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>FPDF_VERSION<font class="kw">&lt;</font><font class="str">'1.53'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Version 1.53 or above is required by this extension'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>f<font class="kw">=</font>fopen<font class="kw">(</font>$file<font class="kw">,</font><font class="str">'wb'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if(!</font>$<font class="kw">this-&gt;</font>f<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Unable to create output file: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">parent::</font>Open<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putheader<font class="kw">();<br>}<br><br>function </font>Image<font class="kw">(</font>$file<font class="kw">,</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">=</font>0<font class="kw">,</font>$h<font class="kw">=</font>0<font class="kw">,</font>$type<font class="kw">=</font><font class="str">''</font><font class="kw">,</font>$link<font class="kw">=</font><font class="str">''</font><font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if(!isset(</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$file<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Retrieve only meta-information<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a<font class="kw">=</font>getimagesize<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$a<font class="kw">===</font>false<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Missing or incorrect image file: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$file<font class="kw">]=array(</font><font class="str">'w'</font><font class="kw">=&gt;</font>$a<font class="kw">[</font>0<font class="kw">],</font><font class="str">'h'</font><font class="kw">=&gt;</font>$a<font class="kw">[</font>1<font class="kw">],</font><font class="str">'type'</font><font class="kw">=&gt;</font>$a<font class="kw">[</font>2<font class="kw">],</font><font class="str">'i'</font><font class="kw">=&gt;</font>count<font class="kw">(</font>$<font class="kw">this-&gt;</font>images<font class="kw">)+</font>1<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">parent::</font>Image<font class="kw">(</font>$file<font class="kw">,</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">,</font>$h<font class="kw">,</font>$type<font class="kw">,</font>$link<font class="kw">);<br>}<br><br>function </font>Output<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$<font class="kw">this-&gt;</font>state<font class="kw">&lt;</font>3<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Close<font class="kw">();<br>}<br><br>function </font>_endpage<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">parent::</font>_endpage<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Write page to file<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$filter<font class="kw">=(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">) ? </font><font class="str">'/Filter /FlateDecode ' </font><font class="kw">: </font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$p<font class="kw">=(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">) ? </font>gzcompress<font class="kw">(</font>$<font class="kw">this-&gt;</font>buffer<font class="kw">) : </font>$<font class="kw">this-&gt;</font>buffer<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;'</font><font class="kw">.</font>$filter<font class="kw">.</font><font class="str">'/Length '</font><font class="kw">.</font>strlen<font class="kw">(</font>$p<font class="kw">).</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putstream<font class="kw">(</font>$p<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>buffer<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>}<br><br>function </font>_newobj<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>n<font class="kw">++;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>offsets<font class="kw">[</font>$<font class="kw">this-&gt;</font>n<font class="kw">]=</font>ftell<font class="kw">(</font>$<font class="kw">this-&gt;</font>f<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$<font class="kw">this-&gt;</font>n<font class="kw">.</font><font class="str">' 0 obj'</font><font class="kw">);<br>}<br><br>function </font>_out<font class="kw">(</font>$s<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$<font class="kw">this-&gt;</font>state<font class="kw">==</font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>buffer<font class="kw">.=</font>$s<font class="kw">.</font><font class="str">"\n"</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>fwrite<font class="kw">(</font>$<font class="kw">this-&gt;</font>f<font class="kw">,</font>$s<font class="kw">.</font><font class="str">"\n"</font><font class="kw">,</font>strlen<font class="kw">(</font>$s<font class="kw">)+</font>1<font class="kw">);<br>}<br><br>function </font>_putimages<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$mqr<font class="kw">=</font>get_magic_quotes_runtime<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>set_magic_quotes_runtime<font class="kw">(</font>0<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$filter<font class="kw">=(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">) ? </font><font class="str">'/Filter /FlateDecode ' </font><font class="kw">: </font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>reset<font class="kw">(</font>$<font class="kw">this-&gt;</font>images<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;while(list(</font>$file<font class="kw">,</font>$info<font class="kw">)=</font>each<font class="kw">(</font>$<font class="kw">this-&gt;</font>images<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Load image<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>$info<font class="kw">[</font><font class="str">'type'</font><font class="kw">]==</font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">=</font>$<font class="kw">this-&gt;</font>_parsejpg<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$info<font class="kw">[</font><font class="str">'type'</font><font class="kw">]==</font>3<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">=</font>$<font class="kw">this-&gt;</font>_parsepng<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$info<font class="kw">[</font><font class="str">'type'</font><font class="kw">]==</font>1 <font class="kw">&amp;&amp; </font>method_exists<font class="kw">(</font>$<font class="kw">this,</font><font class="str">'_parsegif'</font><font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">=</font>$<font class="kw">this-&gt;</font>_parsegif<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Unsupported image type: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Put it into file<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$file<font class="kw">][</font><font class="str">'n'</font><font class="kw">]=</font>$<font class="kw">this-&gt;</font>n<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;/Type /XObject'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Subtype /Image'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Width '</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'w'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Height '</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'h'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]==</font><font class="str">'Indexed'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/ColorSpace [/Indexed /DeviceRGB '</font><font class="kw">.(</font>strlen<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'pal'</font><font class="kw">])/</font>3<font class="kw">-</font>1<font class="kw">).</font><font class="str">' '</font><font class="kw">.(</font>$<font class="kw">this-&gt;</font>n<font class="kw">+</font>1<font class="kw">).</font><font class="str">' 0 R]'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/ColorSpace /'</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]==</font><font class="str">'DeviceCMYK'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Decode [1 0 1 0 1 0 1 0]'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/BitsPerComponent '</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'bpc'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$info<font class="kw">[</font><font class="str">'f'</font><font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Filter /'</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'f'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$info<font class="kw">[</font><font class="str">'parms'</font><font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'parms'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">]) &amp;&amp; </font>is_array<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$i<font class="kw">=</font>0<font class="kw">;</font>$i<font class="kw">&lt;</font>count<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">]);</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">.=</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">][</font>$i<font class="kw">].</font><font class="str">' '</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">][</font>$i<font class="kw">].</font><font class="str">' '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Mask ['</font><font class="kw">.</font>$trns<font class="kw">.</font><font class="str">']'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Length '</font><font class="kw">.</font>strlen<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'data'</font><font class="kw">]).</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putstream<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'data'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset(</font>$info<font class="kw">[</font><font class="str">'data'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Palette<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]==</font><font class="str">'Indexed'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pal<font class="kw">=(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">) ? </font>gzcompress<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'pal'</font><font class="kw">]) : </font>$info<font class="kw">[</font><font class="str">'pal'</font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;'</font><font class="kw">.</font>$filter<font class="kw">.</font><font class="str">'/Length '</font><font class="kw">.</font>strlen<font class="kw">(</font>$pal<font class="kw">).</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putstream<font class="kw">(</font>$pal<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>set_magic_quotes_runtime<font class="kw">(</font>$mqr<font class="kw">);<br>}<br><br>function </font>_putpages<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$nb<font class="kw">=</font>$<font class="kw">this-&gt;</font>page<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$<font class="kw">this-&gt;</font>DefOrientation<font class="kw">==</font><font class="str">'P'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$wPt<font class="kw">=</font>$<font class="kw">this-&gt;</font>fwPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$hPt<font class="kw">=</font>$<font class="kw">this-&gt;</font>fhPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$wPt<font class="kw">=</font>$<font class="kw">this-&gt;</font>fhPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$hPt<font class="kw">=</font>$<font class="kw">this-&gt;</font>fwPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Page objects<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">for(</font>$n<font class="kw">=</font>1<font class="kw">;</font>$n<font class="kw">&lt;=</font>$nb<font class="kw">;</font>$n<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;/Type /Page'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Parent 1 0 R'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$<font class="kw">this-&gt;</font>OrientationChanges<font class="kw">[</font>$n<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'/MediaBox [0 0 %.2f %.2f]'</font><font class="kw">,</font>$hPt<font class="kw">,</font>$wPt<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Resources 2 0 R'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$<font class="kw">this-&gt;</font>PageLinks<font class="kw">[</font>$n<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Links<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$annots<font class="kw">=</font><font class="str">'/Annots ['</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach(</font>$<font class="kw">this-&gt;</font>PageLinks<font class="kw">[</font>$n<font class="kw">] as </font>$pl<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$rect<font class="kw">=</font>sprintf<font class="kw">(</font><font class="str">'%.2f %.2f %.2f %.2f'</font><font class="kw">,</font>$pl<font class="kw">[</font>0<font class="kw">],</font>$pl<font class="kw">[</font>1<font class="kw">],</font>$pl<font class="kw">[</font>0<font class="kw">]+</font>$pl<font class="kw">[</font>2<font class="kw">],</font>$pl<font class="kw">[</font>1<font class="kw">]-</font>$pl<font class="kw">[</font>3<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$annots<font class="kw">.=</font><font class="str">'&lt;&lt;/Type /Annot /Subtype /Link /Rect ['</font><font class="kw">.</font>$rect<font class="kw">.</font><font class="str">'] /Border [0 0 0] '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>is_string<font class="kw">(</font>$pl<font class="kw">[</font>4<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$annots<font class="kw">.=</font><font class="str">'/A &lt;&lt;/S /URI /URI '</font><font class="kw">.</font>$<font class="kw">this-&gt;</font>_textstring<font class="kw">(</font>$pl<font class="kw">[</font>4<font class="kw">]).</font><font class="str">'&gt;&gt;&gt;&gt;'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$l<font class="kw">=</font>$<font class="kw">this-&gt;</font>links<font class="kw">[</font>$pl<font class="kw">[</font>4<font class="kw">]];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=isset(</font>$<font class="kw">this-&gt;</font>OrientationChanges<font class="kw">[</font>$l<font class="kw">[</font>0<font class="kw">]]) ? </font>$wPt <font class="kw">: </font>$hPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$annots<font class="kw">.=</font>sprintf<font class="kw">(</font><font class="str">'/Dest [%d 0 R /XYZ 0 %.2f null]&gt;&gt;'</font><font class="kw">,</font>2<font class="kw">+</font>$nb<font class="kw">+</font>$l<font class="kw">[</font>0<font class="kw">],</font>$h<font class="kw">-</font>$l<font class="kw">[</font>1<font class="kw">]*</font>$<font class="kw">this-&gt;</font>k<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$annots<font class="kw">.</font><font class="str">']'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Contents '</font><font class="kw">.(</font>2<font class="kw">+</font>$n<font class="kw">).</font><font class="str">' 0 R&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Page root<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>offsets<font class="kw">[</font>1<font class="kw">]=</font>ftell<font class="kw">(</font>$<font class="kw">this-&gt;</font>f<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'1 0 obj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;/Type /Pages'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$kids<font class="kw">=</font><font class="str">'/Kids ['</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$n<font class="kw">=</font>1<font class="kw">;</font>$n<font class="kw">&lt;=</font>$nb<font class="kw">;</font>$n<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$kids<font class="kw">.=(</font>2<font class="kw">+</font>$nb<font class="kw">+</font>$n<font class="kw">).</font><font class="str">' 0 R '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$kids<font class="kw">.</font><font class="str">']'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Count '</font><font class="kw">.</font>$nb<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'/MediaBox [0 0 %.2f %.2f]'</font><font class="kw">,</font>$wPt<font class="kw">,</font>$hPt<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>}<br><br>function </font>_putresources<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putfonts<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putimages<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Resource dictionary<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>offsets<font class="kw">[</font>2<font class="kw">]=</font>ftell<font class="kw">(</font>$<font class="kw">this-&gt;</font>f<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'2 0 obj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putresourcedict<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>}<br><br>function </font>_putcatalog<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Type /Catalog'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Pages 1 0 R'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$n<font class="kw">=</font>3<font class="kw">+</font>$<font class="kw">this-&gt;</font>page<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$<font class="kw">this-&gt;</font>ZoomMode<font class="kw">==</font><font class="str">'fullpage'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/OpenAction ['</font><font class="kw">.</font>$n<font class="kw">.</font><font class="str">' 0 R /Fit]'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$<font class="kw">this-&gt;</font>ZoomMode<font class="kw">==</font><font class="str">'fullwidth'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/OpenAction ['</font><font class="kw">.</font>$n<font class="kw">.</font><font class="str">' 0 R /FitH null]'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$<font class="kw">this-&gt;</font>ZoomMode<font class="kw">==</font><font class="str">'real'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/OpenAction ['</font><font class="kw">.</font>$n<font class="kw">.</font><font class="str">' 0 R /XYZ null null 1]'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;elseif(!</font>is_string<font class="kw">(</font>$<font class="kw">this-&gt;</font>ZoomMode<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/OpenAction ['</font><font class="kw">.</font>$n<font class="kw">.</font><font class="str">' 0 R /XYZ null null '</font><font class="kw">.(</font>$<font class="kw">this-&gt;</font>ZoomMode<font class="kw">/</font>100<font class="kw">).</font><font class="str">']'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$<font class="kw">this-&gt;</font>LayoutMode<font class="kw">==</font><font class="str">'single'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/PageLayout /SinglePage'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$<font class="kw">this-&gt;</font>LayoutMode<font class="kw">==</font><font class="str">'continuous'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/PageLayout /OneColumn'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$<font class="kw">this-&gt;</font>LayoutMode<font class="kw">==</font><font class="str">'two'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/PageLayout /TwoColumnLeft'</font><font class="kw">);<br>}<br><br>function </font>_enddoc<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putpages<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putresources<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Info<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putinfo<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Catalog<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putcatalog<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Cross-ref<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$o<font class="kw">=</font>ftell<font class="kw">(</font>$<font class="kw">this-&gt;</font>f<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'xref'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'0 '</font><font class="kw">.(</font>$<font class="kw">this-&gt;</font>n<font class="kw">+</font>1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'0000000000 65535 f '</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$i<font class="kw">=</font>1<font class="kw">;</font>$i<font class="kw">&lt;=</font>$<font class="kw">this-&gt;</font>n<font class="kw">;</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'%010d 00000 n '</font><font class="kw">,</font>$<font class="kw">this-&gt;</font>offsets<font class="kw">[</font>$i<font class="kw">]));<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Trailer<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'trailer'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_puttrailer<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'startxref'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$o<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'%%EOF'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>state<font class="kw">=</font>3<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>fclose<font class="kw">(</font>$<font class="kw">this-&gt;</font>f<font class="kw">);<br>}<br>}</font>
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Download</H4><A HREF="script76.zip">ZIP</A> | <A HREF="script76.tgz">TGZ</A>
</BODY>
</HTML>
