<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Flowing block</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY ONLOAD="if(window.focus) window.focus()">
<H2>Flowing block</H2>
<H4 CLASS="st">Informations</H4>Author: <SCRIPT TYPE="text/javascript">document.write('<A H'+'REF="m'+'ailto:damonkohler'+'&#'+'64;'+'yahoo.com?subject=Flowing%20block">');</SCRIPT>Damon Kohler<SCRIPT TYPE="text/javascript">document.write('<\/A>');</SCRIPT><BR>License: GPL
<H4 CLASS="st">Description</H4>This script allows writing text in a block in much the same way the Write function works. The
block is defined in a manner similar to MultiCell (width, line height, border, alignment and
filling color). It is possible to add content with WriteFlowingBlock and change font attributes
(SetFont and SetFontSize) between two calls.<BR>
Currently changes in text color are not supported; however, such a change could be easily added.<BR>
<BR>
This was written as part of the <A HREF="http://www.sourceforge.net/projects/phpfop/" TARGET="_blank">phpFOP</A> project.
<H4 CLASS="st">Source</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require_once( </font><font class="str">'fpdf.php' </font><font class="kw">);<br><br>class </font>PDF <font class="kw">extends </font>FPDF<br><font class="kw">{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;var </font>$flowingBlockAttr<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>saveFont<font class="kw">()<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$saved <font class="kw">= array();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$saved<font class="kw">[ </font><font class="str">'family' </font><font class="kw">] = </font>$<font class="kw">this-&gt;</font>FontFamily<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$saved<font class="kw">[ </font><font class="str">'style' </font><font class="kw">] = </font>$<font class="kw">this-&gt;</font>FontStyle<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$saved<font class="kw">[ </font><font class="str">'sizePt' </font><font class="kw">] = </font>$<font class="kw">this-&gt;</font>FontSizePt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$saved<font class="kw">[ </font><font class="str">'size' </font><font class="kw">] = </font>$<font class="kw">this-&gt;</font>FontSize<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$saved<font class="kw">[ </font><font class="str">'curr' </font><font class="kw">] =&amp; </font>$<font class="kw">this-&gt;</font>CurrentFont<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>$saved<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>restoreFont<font class="kw">( </font>$saved <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>FontFamily <font class="kw">= </font>$saved<font class="kw">[ </font><font class="str">'family' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>FontStyle <font class="kw">= </font>$saved<font class="kw">[ </font><font class="str">'style' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>FontSizePt <font class="kw">= </font>$saved<font class="kw">[ </font><font class="str">'sizePt' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>FontSize <font class="kw">= </font>$saved<font class="kw">[ </font><font class="str">'size' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>CurrentFont <font class="kw">=&amp; </font>$saved<font class="kw">[ </font><font class="str">'curr' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if( </font>$<font class="kw">this-&gt;</font>page <font class="kw">&gt; </font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">( </font>sprintf<font class="kw">( </font><font class="str">'BT /F%d %.2f Tf ET'</font><font class="kw">, </font>$<font class="kw">this-&gt;</font>CurrentFont<font class="kw">[ </font><font class="str">'i' </font><font class="kw">], </font>$<font class="kw">this-&gt;</font>FontSizePt <font class="kw">) );<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>newFlowingBlock<font class="kw">( </font>$w<font class="kw">, </font>$h<font class="kw">, </font>$b <font class="kw">= </font>0<font class="kw">, </font>$a <font class="kw">= </font><font class="str">'J'</font><font class="kw">, </font>$f <font class="kw">= </font>0 <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// cell width in points<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'width' </font><font class="kw">] = </font>$w <font class="kw">* </font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// line height in user units<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'height' </font><font class="kw">] = </font>$h<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'lineCount' </font><font class="kw">] = </font>0<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'border' </font><font class="kw">] = </font>$b<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'align' </font><font class="kw">] = </font>$a<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'fill' </font><font class="kw">] = </font>$f<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'font' </font><font class="kw">] = array();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'content' </font><font class="kw">] = array();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'contentWidth' </font><font class="kw">] = </font>0<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>finishFlowingBlock<font class="kw">()<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$maxWidth <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'width' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$lineHeight <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'height' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$border <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'border' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$align <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'align' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$fill <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'fill' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$content <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'content' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$font <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'font' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// set normal spacing<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">( </font>sprintf<font class="kw">( </font><font class="str">'%.3f Tw'</font><font class="kw">, </font>0 <font class="kw">) );<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// print out each chunk<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the amount of space taken up so far in user units<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$usedWidth <font class="kw">= </font>0<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ( </font>$content <font class="kw">as </font>$k <font class="kw">=&gt; </font>$chunk <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b <font class="kw">= </font><font class="str">''</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( </font>is_int<font class="kw">( </font>strpos<font class="kw">( </font>$border<font class="kw">, </font><font class="str">'B' </font><font class="kw">) ) )<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b <font class="kw">.= </font><font class="str">'B'</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( </font>$k <font class="kw">== </font>0 <font class="kw">&amp;&amp; </font>is_int<font class="kw">( </font>strpos<font class="kw">( </font>$border<font class="kw">, </font><font class="str">'L' </font><font class="kw">) ) )<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b <font class="kw">.= </font><font class="str">'L'</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( </font>$k <font class="kw">== </font>count<font class="kw">( </font>$content <font class="kw">) - </font>1 <font class="kw">&amp;&amp; </font>is_int<font class="kw">( </font>strpos<font class="kw">( </font>$border<font class="kw">, </font><font class="str">'R' </font><font class="kw">) ) )<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b <font class="kw">.= </font><font class="str">'R'</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>restoreFont<font class="kw">( </font>$font<font class="kw">[ </font>$k <font class="kw">] );<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// if it's the last chunk of this line, move to the next line after<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if ( </font>$k <font class="kw">== </font>count<font class="kw">( </font>$content <font class="kw">) - </font>1 <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Cell<font class="kw">( ( </font>$maxWidth <font class="kw">/ </font>$<font class="kw">this-&gt;</font>k <font class="kw">) - </font>$usedWidth <font class="kw">+ </font>2 <font class="kw">* </font>$<font class="kw">this-&gt;</font>cMargin<font class="kw">, </font>$lineHeight<font class="kw">, </font>$chunk<font class="kw">, </font>$b<font class="kw">, </font>1<font class="kw">, </font>$align<font class="kw">, </font>$fill <font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Cell<font class="kw">( </font>$<font class="kw">this-&gt;</font>GetStringWidth<font class="kw">( </font>$chunk <font class="kw">), </font>$lineHeight<font class="kw">, </font>$chunk<font class="kw">, </font>$b<font class="kw">, </font>0<font class="kw">, </font>$align<font class="kw">, </font>$fill <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$usedWidth <font class="kw">+= </font>$<font class="kw">this-&gt;</font>GetStringWidth<font class="kw">( </font>$chunk <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>WriteFlowingBlock<font class="kw">( </font>$s <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// width of all the content so far in points<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$contentWidth <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'contentWidth' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// cell width in points<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$maxWidth <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'width' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$lineCount <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'lineCount' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// line height in user units<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$lineHeight <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'height' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$border <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'border' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$align <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'align' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$fill <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'fill' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$content <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'content' </font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$font <font class="kw">=&amp; </font>$<font class="kw">this-&gt;</font>flowingBlockAttr<font class="kw">[ </font><font class="str">'font' </font><font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$font<font class="kw">[] = </font>$<font class="kw">this-&gt;</font>saveFont<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$content<font class="kw">[] = </font><font class="str">''</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$currContent <font class="kw">=&amp; </font>$content<font class="kw">[ </font>count<font class="kw">( </font>$content <font class="kw">) - </font>1 <font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// where the line should be cutoff if it is to be justified<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$cutoffWidth <font class="kw">= </font>$contentWidth<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// for every character in the string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">for ( </font>$i <font class="kw">= </font>0<font class="kw">; </font>$i <font class="kw">&lt; </font>strlen<font class="kw">( </font>$s <font class="kw">); </font>$i<font class="kw">++ )<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// extract the current character<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$c <font class="kw">= </font>$s<font class="kw">{ </font>$i <font class="kw">};<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// get the width of the character in points<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$cw <font class="kw">= </font>$<font class="kw">this-&gt;</font>CurrentFont<font class="kw">[ </font><font class="str">'cw' </font><font class="kw">][ </font>$c <font class="kw">] * ( </font>$<font class="kw">this-&gt;</font>FontSizePt <font class="kw">/ </font>1000 <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( </font>$c <font class="kw">== </font><font class="str">' ' </font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$currContent <font class="kw">.= </font><font class="str">' '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$cutoffWidth <font class="kw">= </font>$contentWidth<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$contentWidth <font class="kw">+= </font>$cw<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// try adding another char<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if ( </font>$contentWidth <font class="kw">+ </font>$cw <font class="kw">&gt; </font>$maxWidth <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// won't fit, output what we have<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$lineCount<font class="kw">++;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// contains any content that didn't make it into this print<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$savedContent <font class="kw">= </font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$savedFont <font class="kw">= array();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// first, cut off and save any partial words at the end of the string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$words <font class="kw">= </font>explode<font class="kw">( </font><font class="str">' '</font><font class="kw">, </font>$currContent <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// if it looks like we didn't finish any words for this chunk<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if ( </font>count<font class="kw">( </font>$words <font class="kw">) == </font>1 <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// save and crop off the content currently on the stack<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$savedContent <font class="kw">= </font>array_pop<font class="kw">( </font>$content <font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$savedFont <font class="kw">= </font>array_pop<font class="kw">( </font>$font <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// trim any trailing spaces off the last bit of content<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$currContent <font class="kw">=&amp; </font>$content<font class="kw">[ </font>count<font class="kw">( </font>$content <font class="kw">) - </font>1 <font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$currContent <font class="kw">= </font>rtrim<font class="kw">( </font>$currContent <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// otherwise, we need to find which bit to cut off<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$lastContent <font class="kw">= </font><font class="str">''</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( </font>$w <font class="kw">= </font>0<font class="kw">; </font>$w <font class="kw">&lt; </font>count<font class="kw">( </font>$words <font class="kw">) - </font>1<font class="kw">; </font>$w<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$lastContent <font class="kw">.= </font><font class="str">"</font><font class="kw">{</font><font class="str">$words</font><font class="kw">[ </font><font class="str">$w </font><font class="kw">]}</font><font class="str"> "</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$savedContent <font class="kw">= </font>$words<font class="kw">[ </font>count<font class="kw">( </font>$words <font class="kw">) - </font>1 <font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$savedFont <font class="kw">= </font>$<font class="kw">this-&gt;</font>saveFont<font class="kw">();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// replace the current content with the cropped version<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$currContent <font class="kw">= </font>rtrim<font class="kw">( </font>$lastContent <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// update $contentWidth and $cutoffWidth since they changed with cropping<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$contentWidth <font class="kw">= </font>0<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ( </font>$content <font class="kw">as </font>$k <font class="kw">=&gt; </font>$chunk <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>restoreFont<font class="kw">( </font>$font<font class="kw">[ </font>$k <font class="kw">] );<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$contentWidth <font class="kw">+= </font>$<font class="kw">this-&gt;</font>GetStringWidth<font class="kw">( </font>$chunk <font class="kw">) * </font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$cutoffWidth <font class="kw">= </font>$contentWidth<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// if it's justified, we need to find the char spacing<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if( </font>$align <font class="kw">== </font><font class="str">'J' </font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// count how many spaces there are in the entire content string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$numSpaces <font class="kw">= </font>0<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ( </font>$content <font class="kw">as </font>$chunk <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$numSpaces <font class="kw">+= </font>substr_count<font class="kw">( </font>$chunk<font class="kw">, </font><font class="str">' ' </font><font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// if there's more than one space, find word spacing in points<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if ( </font>$numSpaces <font class="kw">&gt; </font>0 <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>ws <font class="kw">= ( </font>$maxWidth <font class="kw">- </font>$cutoffWidth <font class="kw">) / </font>$numSpaces<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>ws <font class="kw">= </font>0<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">( </font>sprintf<font class="kw">( </font><font class="str">'%.3f Tw'</font><font class="kw">, </font>$<font class="kw">this-&gt;</font>ws <font class="kw">) );<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// otherwise, we want normal spacing<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">( </font>sprintf<font class="kw">( </font><font class="str">'%.3f Tw'</font><font class="kw">, </font>0 <font class="kw">) );<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// print out each chunk<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$usedWidth <font class="kw">= </font>0<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ( </font>$content <font class="kw">as </font>$k <font class="kw">=&gt; </font>$chunk <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>restoreFont<font class="kw">( </font>$font<font class="kw">[ </font>$k <font class="kw">] );<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$stringWidth <font class="kw">= </font>$<font class="kw">this-&gt;</font>GetStringWidth<font class="kw">( </font>$chunk <font class="kw">) + ( </font>$<font class="kw">this-&gt;</font>ws <font class="kw">* </font>substr_count<font class="kw">( </font>$chunk<font class="kw">, </font><font class="str">' ' </font><font class="kw">) / </font>$<font class="kw">this-&gt;</font>k <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// determine which borders should be used<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b <font class="kw">= </font><font class="str">''</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( </font>$lineCount <font class="kw">== </font>1 <font class="kw">&amp;&amp; </font>is_int<font class="kw">( </font>strpos<font class="kw">( </font>$border<font class="kw">, </font><font class="str">'T' </font><font class="kw">) ) )<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b <font class="kw">.= </font><font class="str">'T'</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( </font>$k <font class="kw">== </font>0 <font class="kw">&amp;&amp; </font>is_int<font class="kw">( </font>strpos<font class="kw">( </font>$border<font class="kw">, </font><font class="str">'L' </font><font class="kw">) ) )<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b <font class="kw">.= </font><font class="str">'L'</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( </font>$k <font class="kw">== </font>count<font class="kw">( </font>$content <font class="kw">) - </font>1 <font class="kw">&amp;&amp; </font>is_int<font class="kw">( </font>strpos<font class="kw">( </font>$border<font class="kw">, </font><font class="str">'R' </font><font class="kw">) ) )<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b <font class="kw">.= </font><font class="str">'R'</font><font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// if it's the last chunk of this line, move to the next line after<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if ( </font>$k <font class="kw">== </font>count<font class="kw">( </font>$content <font class="kw">) - </font>1 <font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Cell<font class="kw">( ( </font>$maxWidth <font class="kw">/ </font>$<font class="kw">this-&gt;</font>k <font class="kw">) - </font>$usedWidth <font class="kw">+ </font>2 <font class="kw">* </font>$<font class="kw">this-&gt;</font>cMargin<font class="kw">, </font>$lineHeight<font class="kw">, </font>$chunk<font class="kw">, </font>$b<font class="kw">, </font>1<font class="kw">, </font>$align<font class="kw">, </font>$fill <font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Cell<font class="kw">( </font>$stringWidth <font class="kw">+ </font>2 <font class="kw">* </font>$<font class="kw">this-&gt;</font>cMargin<font class="kw">, </font>$lineHeight<font class="kw">, </font>$chunk<font class="kw">, </font>$b<font class="kw">, </font>0<font class="kw">, </font>$align<font class="kw">, </font>$fill <font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>x <font class="kw">-= </font>2 <font class="kw">* </font>$<font class="kw">this-&gt;</font>cMargin<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$usedWidth <font class="kw">+= </font>$stringWidth<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// move on to the next line, reset variables, tack on saved content and current char<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>restoreFont<font class="kw">( </font>$savedFont <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$font <font class="kw">= array( </font>$savedFont <font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$content <font class="kw">= array( </font>$savedContent <font class="kw">. </font>$s<font class="kw">{ </font>$i <font class="kw">} );<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$currContent <font class="kw">=&amp; </font>$content<font class="kw">[ </font>0 <font class="kw">];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$contentWidth <font class="kw">= </font>$<font class="kw">this-&gt;</font>GetStringWidth<font class="kw">( </font>$currContent <font class="kw">) * </font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$cutoffWidth <font class="kw">= </font>$contentWidth<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// another character will fit, so add it on<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$contentWidth <font class="kw">+= </font>$cw<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$currContent <font class="kw">.= </font>$s<font class="kw">{ </font>$i <font class="kw">};<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Example</H4>This example outputs the same text with the four possible alignments (justified, left-aligned, right-aligned and centered).<BR>
<BR>
<TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br>define<font class="kw">( </font><font class="str">'FPDF_FONTPATH'</font><font class="kw">, </font><font class="str">'font/' </font><font class="kw">);<br>require_once( </font><font class="str">'flowing_block.php' </font><font class="kw">);<br><br></font>$pdf <font class="kw">= new </font>PDF<font class="kw">();<br><br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>newFlowingBlock<font class="kw">( </font>40<font class="kw">, </font>6<font class="kw">, </font><font class="str">'TBLR'</font><font class="kw">, </font><font class="str">'J' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'B'</font><font class="kw">, </font>16 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'Hello ' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'I'</font><font class="kw">, </font>8 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'World! ' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Times'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'This is a test of the flowing block script.' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'B'</font><font class="kw">, </font>12 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">' All' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Times'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">' of this should be justified correctly.' </font><font class="kw">. </font>str_repeat<font class="kw">( </font><font class="str">' This is a test of the flowing block script.'</font><font class="kw">, </font>3 <font class="kw">) );<br></font>$pdf<font class="kw">-&gt;</font>finishFlowingBlock<font class="kw">();<br><br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>newFlowingBlock<font class="kw">( </font>40<font class="kw">, </font>6<font class="kw">, </font><font class="str">'TBLR'</font><font class="kw">, </font><font class="str">'L' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'B'</font><font class="kw">, </font>16 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'Hello ' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'I'</font><font class="kw">, </font>8 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'World! ' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Times'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'This is a test of the flowing block script.' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'B'</font><font class="kw">, </font>12 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">' All' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Times'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">' of this should be justified correctly.' </font><font class="kw">. </font>str_repeat<font class="kw">( </font><font class="str">' This is a test of the flowing block script.'</font><font class="kw">, </font>3 <font class="kw">) );<br></font>$pdf<font class="kw">-&gt;</font>finishFlowingBlock<font class="kw">();<br><br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>newFlowingBlock<font class="kw">( </font>40<font class="kw">, </font>6<font class="kw">, </font><font class="str">'TBLR'</font><font class="kw">, </font><font class="str">'R' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'B'</font><font class="kw">, </font>16 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'Hello ' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'I'</font><font class="kw">, </font>8 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'World! ' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Times'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'This is a test of the flowing block script.' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'B'</font><font class="kw">, </font>12 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">' All' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Times'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">' of this should be justified correctly.' </font><font class="kw">. </font>str_repeat<font class="kw">( </font><font class="str">' This is a test of the flowing block script.'</font><font class="kw">, </font>3 <font class="kw">) );<br></font>$pdf<font class="kw">-&gt;</font>finishFlowingBlock<font class="kw">();<br><br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>newFlowingBlock<font class="kw">( </font>40<font class="kw">, </font>6<font class="kw">, </font><font class="str">'TBLR'</font><font class="kw">, </font><font class="str">'C' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'B'</font><font class="kw">, </font>16 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'Hello ' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'I'</font><font class="kw">, </font>8 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'World! ' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Times'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">'This is a test of the flowing block script.' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Arial'</font><font class="kw">, </font><font class="str">'B'</font><font class="kw">, </font>12 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">' All' </font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">( </font><font class="str">'Times'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10 <font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>WriteFlowingBlock<font class="kw">( </font><font class="str">' of this should be justified correctly.' </font><font class="kw">. </font>str_repeat<font class="kw">( </font><font class="str">' This is a test of the flowing block script.'</font><font class="kw">, </font>3 <font class="kw">) );<br></font>$pdf<font class="kw">-&gt;</font>finishFlowingBlock<font class="kw">();<br><br></font>$pdf<font class="kw">-&gt;</font>Output<font class="kw">();<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>
<BR>
View the result <A HREF="ex65.pdf" TARGET="_blank">here</A>.
<H4 CLASS="st">Download</H4><A HREF="script65.zip">ZIP</A> | <A HREF="script65.tgz">TGZ</A>
</BODY>
</HTML>
