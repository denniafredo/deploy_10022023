<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Import memory images</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY ONLOAD="if(window.focus) window.focus()">
<H2>Import memory images</H2>
<H4 CLASS="st">Informations</H4>Author: <SCRIPT TYPE="text/javascript">document.write('<A H'+'REF="m'+'ailto:XavierNicolay'+'&#'+'64;'+'ifrance.com?subject=Import%20memory%20images">');</SCRIPT>Xavier Nicolay<SCRIPT TYPE="text/javascript">document.write('<\/A>');</SCRIPT><BR>License: Freeware
<H4 CLASS="st">Description</H4>This script allows to display images that are loaded in memory without the need of
temporary files. There are 2 main usages:<BR>
<BR>
- When an image is retrieved from a database<BR>
- When an image is created with GD<BR>
<BR>
<TT>MemImage(<B>string</B> data, <B>float</B> x, <B>float</B> y [, <B>float</B> w [, <B>float</B> h, [<B>array</B> link]]])</TT><BR>
<BR>
<TT>$data</TT> holds the image in memory. It must be in PNG format.<BR>
<BR>
<TT>GDImage(<B>resource</B> im, <B>float</B> x, <B>float</B> y [, <B>float</B> w [, <B>float</B> h, [<B>array</B> link]]])</TT><BR>
<BR>
<TT>$im</TT> is a GD identifier. If you use JpGraph, you can retrieve it via a call to
<TT>$graph->Stroke(_IMG_HANDLER)</TT> (from version 1.10.1).<BR>
<BR>
Moreover, this script allows to call the standard Image() method with a URL of the form:<BR>
<BR>
<TT>var://variable</TT><BR>
<BR>
where <TT>variable</TT> is a global variable holding an image (PNG or JPEG).
This feature requires PHP>=4.3.2 and FPDF>=1.52.
<H4 CLASS="st">Source</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'fpdf.php'</font><font class="kw">);<br><br>class </font>VariableStream<br><font class="kw">{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Stream handler to read from global variables<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">var </font>$varname<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;var </font>$position<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>stream_open<font class="kw">(</font>$path<font class="kw">, </font>$mode<font class="kw">, </font>$options<font class="kw">, &amp;</font>$opened_path<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$url <font class="kw">= </font>parse_url<font class="kw">(</font>$path<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>varname <font class="kw">= </font>$url<font class="kw">[</font><font class="str">'host'</font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!isset(</font>$GLOBALS<font class="kw">[</font>$<font class="kw">this-&gt;</font>varname<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>trigger_error<font class="kw">(</font><font class="str">'Global variable '</font><font class="kw">.</font>$<font class="kw">this-&gt;</font>varname<font class="kw">.</font><font class="str">' does not exist'</font><font class="kw">, </font>E_USER_WARNING<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>false<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>position <font class="kw">= </font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>true<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>stream_read<font class="kw">(</font>$count<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ret <font class="kw">= </font>substr<font class="kw">(</font>$GLOBALS<font class="kw">[</font>$<font class="kw">this-&gt;</font>varname<font class="kw">], </font>$<font class="kw">this-&gt;</font>position<font class="kw">, </font>$count<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>position <font class="kw">+= </font>strlen<font class="kw">(</font>$ret<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>$ret<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>stream_eof<font class="kw">()<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>$<font class="kw">this-&gt;</font>position <font class="kw">&gt;= </font>strlen<font class="kw">(</font>$GLOBALS<font class="kw">[</font>$<font class="kw">this-&gt;</font>varname<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>stream_tell<font class="kw">()<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>$<font class="kw">this-&gt;</font>position<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>stream_seek<font class="kw">(</font>$offset<font class="kw">, </font>$whence<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$whence<font class="kw">==</font>SEEK_SET<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>position <font class="kw">= </font>$offset<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>true<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>false<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br>class </font>MEM_IMAGE <font class="kw">extends </font>FPDF<br><font class="kw">{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// (c) Xavier Nicolay<br>&nbsp;&nbsp;&nbsp;&nbsp;// V1.01 : 2006-11-19<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//<br>&nbsp;&nbsp;&nbsp;&nbsp;// CONSTRUCTOR<br>&nbsp;&nbsp;&nbsp;&nbsp;//<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>MEM_IMAGE<font class="kw">(</font>$orientation<font class="kw">=</font><font class="str">'P'</font><font class="kw">,</font>$unit<font class="kw">=</font><font class="str">'mm'</font><font class="kw">,</font>$format<font class="kw">=</font><font class="str">'A4'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>FPDF<font class="kw">(</font>$orientation<font class="kw">, </font>$unit<font class="kw">, </font>$format<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Register var stream protocol (requires PHP&gt;=4.3.2)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>function_exists<font class="kw">(</font><font class="str">'stream_wrapper_register'</font><font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>stream_wrapper_register<font class="kw">(</font><font class="str">'var'</font><font class="kw">,</font><font class="str">'VariableStream'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//<br>&nbsp;&nbsp;&nbsp;&nbsp;// PRIVATE FUNCTIONS<br>&nbsp;&nbsp;&nbsp;&nbsp;//<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>_readstr<font class="kw">(</font>$var<font class="kw">, &amp;</font>$pos<font class="kw">, </font>$n<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read some bytes from string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$string <font class="kw">= </font>substr<font class="kw">(</font>$var<font class="kw">, </font>$pos<font class="kw">, </font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pos <font class="kw">+= </font>$n<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>$string<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>_readstr_int<font class="kw">(</font>$var<font class="kw">, &amp;</font>$pos<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read a 4-byte integer from string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i <font class="kw">=</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">, </font>$pos<font class="kw">, </font>1<font class="kw">))&lt;&lt;</font>24<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i<font class="kw">+=</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">, </font>$pos<font class="kw">, </font>1<font class="kw">))&lt;&lt;</font>16<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i<font class="kw">+=</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">, </font>$pos<font class="kw">, </font>1<font class="kw">))&lt;&lt;</font>8<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i<font class="kw">+=</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">, </font>$pos<font class="kw">, </font>1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>$i<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>_parsemempng<font class="kw">(</font>$var<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pos<font class="kw">=</font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Check signature<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$sig <font class="kw">= </font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">, </font>8<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$sig <font class="kw">!= </font>chr<font class="kw">(</font>137<font class="kw">).</font><font class="str">'PNG'</font><font class="kw">.</font>chr<font class="kw">(</font>13<font class="kw">).</font>chr<font class="kw">(</font>10<font class="kw">).</font>chr<font class="kw">(</font>26<font class="kw">).</font>chr<font class="kw">(</font>10<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Not a PNG image'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read header chunk<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ihdr <font class="kw">= </font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if( </font>$ihdr <font class="kw">!= </font><font class="str">'IHDR'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Incorrect PNG Image'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font>$<font class="kw">this-&gt;</font>_readstr_int<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=</font>$<font class="kw">this-&gt;</font>_readstr_int<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$bpc<font class="kw">=</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$bpc<font class="kw">&gt;</font>8<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'16-bit depth not supported: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ct<font class="kw">=</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$ct<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$colspace<font class="kw">=</font><font class="str">'DeviceGray'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$ct<font class="kw">==</font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$colspace<font class="kw">=</font><font class="str">'DeviceRGB'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$ct<font class="kw">==</font>3<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$colspace<font class="kw">=</font><font class="str">'Indexed'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Alpha channel not supported: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>1<font class="kw">))!=</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Unknown compression method: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>1<font class="kw">))!=</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Unknown filter method: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>ord<font class="kw">(</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>1<font class="kw">))!=</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Interlacing not supported: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$parms<font class="kw">=</font><font class="str">'/DecodeParms &lt;&lt;/Predictor 15 /Colors '</font><font class="kw">.(</font>$ct<font class="kw">==</font>2 <font class="kw">? </font>3 <font class="kw">: </font>1<font class="kw">).</font><font class="str">' /BitsPerComponent '</font><font class="kw">.</font>$bpc<font class="kw">.</font><font class="str">' /Columns '</font><font class="kw">.</font>$w<font class="kw">.</font><font class="str">'&gt;&gt;'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Scan chunks looking for palette, transparency and image data<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pal<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$data<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$n<font class="kw">=</font>$<font class="kw">this-&gt;</font>_readstr_int<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$type<font class="kw">=</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$type<font class="kw">==</font><font class="str">'PLTE'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read palette<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pal<font class="kw">=</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$type<font class="kw">==</font><font class="str">'tRNS'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read transparency info<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$t<font class="kw">=</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$ct<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=array(</font>ord<font class="kw">(</font>substr<font class="kw">(</font>$t<font class="kw">,</font>1<font class="kw">,</font>1<font class="kw">)));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$ct<font class="kw">==</font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=array(</font>ord<font class="kw">(</font>substr<font class="kw">(</font>$t<font class="kw">,</font>1<font class="kw">,</font>1<font class="kw">)),</font>ord<font class="kw">(</font>substr<font class="kw">(</font>$t<font class="kw">,</font>3<font class="kw">,</font>1<font class="kw">)),</font>ord<font class="kw">(</font>substr<font class="kw">(</font>$t<font class="kw">,</font>5<font class="kw">,</font>1<font class="kw">)));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p<font class="kw">=</font>strpos<font class="kw">(</font>$t<font class="kw">,</font>chr<font class="kw">(</font>0<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>is_int<font class="kw">(</font>$p<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=array(</font>$p<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$type<font class="kw">==</font><font class="str">'IDAT'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read image data block<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$data<font class="kw">.=</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$type<font class="kw">==</font><font class="str">'IEND'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_readstr<font class="kw">(</font>$var<font class="kw">,</font>$pos<font class="kw">,</font>$n<font class="kw">+</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(</font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$colspace<font class="kw">==</font><font class="str">'Indexed' </font><font class="kw">and empty(</font>$pal<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Missing palette in '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array(</font><font class="str">'w'</font><font class="kw">=&gt;</font>$w<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font class="str">'h'</font><font class="kw">=&gt;</font>$h<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font class="str">'cs'</font><font class="kw">=&gt;</font>$colspace<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font class="str">'bpc'</font><font class="kw">=&gt;</font>$bpc<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font class="str">'f'</font><font class="kw">=&gt;</font><font class="str">'FlateDecode'</font><font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font class="str">'parms'</font><font class="kw">=&gt;</font>$parms<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font class="str">'pal'</font><font class="kw">=&gt;</font>$pal<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font class="str">'trns'</font><font class="kw">=&gt;</font>$trns<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font class="str">'data'</font><font class="kw">=&gt;</font>$data<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">/********************/<br>&nbsp;&nbsp;&nbsp;&nbsp;/* PUBLIC FUNCTIONS */<br>&nbsp;&nbsp;&nbsp;&nbsp;/********************/<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>MemImage<font class="kw">(</font>$data<font class="kw">, </font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">=</font>0<font class="kw">, </font>$h<font class="kw">=</font>0<font class="kw">, </font>$link<font class="kw">=</font><font class="str">''</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Put the PNG image stored in $data<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$id <font class="kw">= </font>md5<font class="kw">(</font>$data<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!isset(</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$id<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info <font class="kw">= </font>$<font class="kw">this-&gt;</font>_parsemempng<font class="kw">( </font>$data <font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">[</font><font class="str">'i'</font><font class="kw">] = </font>count<font class="kw">(</font>$<font class="kw">this-&gt;</font>images<font class="kw">)+</font>1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$id<font class="kw">]=</font>$info<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">=</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$id<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Automatic width and height calculation if needed<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>$w<font class="kw">==</font>0 <font class="kw">and </font>$h<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Put image at 72 dpi<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font>$info<font class="kw">[</font><font class="str">'w'</font><font class="kw">]/</font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=</font>$info<font class="kw">[</font><font class="str">'h'</font><font class="kw">]/</font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$w<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font>$h<font class="kw">*</font>$info<font class="kw">[</font><font class="str">'w'</font><font class="kw">]/</font>$info<font class="kw">[</font><font class="str">'h'</font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$h<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=</font>$w<font class="kw">*</font>$info<font class="kw">[</font><font class="str">'h'</font><font class="kw">]/</font>$info<font class="kw">[</font><font class="str">'w'</font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'q %.2f 0 0 %.2f %.2f %.2f cm /I%d Do Q'</font><font class="kw">,</font>$w<font class="kw">*</font>$<font class="kw">this-&gt;</font>k<font class="kw">,</font>$h<font class="kw">*</font>$<font class="kw">this-&gt;</font>k<font class="kw">,</font>$x<font class="kw">*</font>$<font class="kw">this-&gt;</font>k<font class="kw">,(</font>$<font class="kw">this-&gt;</font>h<font class="kw">-(</font>$y<font class="kw">+</font>$h<font class="kw">))*</font>$<font class="kw">this-&gt;</font>k<font class="kw">,</font>$info<font class="kw">[</font><font class="str">'i'</font><font class="kw">]));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$link<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Link<font class="kw">(</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">,</font>$h<font class="kw">,</font>$link<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>GDImage<font class="kw">(</font>$im<font class="kw">, </font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">=</font>0<font class="kw">, </font>$h<font class="kw">=</font>0<font class="kw">, </font>$link<font class="kw">=</font><font class="str">''</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Put the GD image $im<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>ob_start<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>imagepng<font class="kw">(</font>$im<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$data <font class="kw">= </font>ob_get_contents<font class="kw">();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>ob_end_clean<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>MemImage<font class="kw">(</font>$data<font class="kw">, </font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">, </font>$h<font class="kw">, </font>$link<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Example</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'mem_image.php'</font><font class="kw">);<br><br></font>$pdf<font class="kw">=new </font>MEM_IMAGE<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br><br></font><font class="cmt">//Create a GD graphic<br></font>$im<font class="kw">=</font>imagecreate<font class="kw">(</font>200<font class="kw">, </font>150<font class="kw">);<br></font>$bgcolor<font class="kw">=</font>imagecolorallocate<font class="kw">(</font>$im<font class="kw">, </font>255<font class="kw">, </font>255<font class="kw">, </font>255<font class="kw">);<br></font>$bordercolor<font class="kw">=</font>imagecolorallocate<font class="kw">(</font>$im<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">);<br></font>$color1<font class="kw">=</font>imagecolorallocate<font class="kw">(</font>$im<font class="kw">, </font>255<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">);<br></font>$color2<font class="kw">=</font>imagecolorallocate<font class="kw">(</font>$im<font class="kw">, </font>0<font class="kw">, </font>255<font class="kw">, </font>0<font class="kw">);<br></font>$color3<font class="kw">=</font>imagecolorallocate<font class="kw">(</font>$im<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font>255<font class="kw">);<br></font>imagefilledrectangle<font class="kw">(</font>$im<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font>199<font class="kw">, </font>149<font class="kw">, </font>$bgcolor<font class="kw">);<br></font>imagerectangle<font class="kw">(</font>$im<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font>199<font class="kw">, </font>149<font class="kw">, </font>$bordercolor<font class="kw">);<br></font>imagefilledrectangle<font class="kw">(</font>$im<font class="kw">, </font>30<font class="kw">, </font>100<font class="kw">, </font>60<font class="kw">, </font>148<font class="kw">, </font>$color1<font class="kw">);<br></font>imagefilledrectangle<font class="kw">(</font>$im<font class="kw">, </font>80<font class="kw">, </font>80<font class="kw">, </font>110<font class="kw">, </font>148<font class="kw">, </font>$color2<font class="kw">);<br></font>imagefilledrectangle<font class="kw">(</font>$im<font class="kw">, </font>130<font class="kw">, </font>40<font class="kw">, </font>160<font class="kw">, </font>148<font class="kw">, </font>$color3<font class="kw">);<br></font><font class="cmt">//Output it<br></font>$pdf<font class="kw">-&gt;</font>GDImage<font class="kw">(</font>$im<font class="kw">, </font>50<font class="kw">, </font>25<font class="kw">, </font>40<font class="kw">);<br></font>imagedestroy<font class="kw">(</font>$im<font class="kw">);<br><br></font><font class="cmt">//Load an image in a global variable<br></font>$logo<font class="kw">=</font>file_get_contents<font class="kw">(</font><font class="str">'logo.jpg'</font><font class="kw">);<br></font><font class="cmt">//Output it (requires PHP&gt;=4.3.2 and FPDF&gt;=1.52)<br></font>$pdf<font class="kw">-&gt;</font>Image<font class="kw">(</font><font class="str">'var://logo'</font><font class="kw">, </font>120<font class="kw">, </font>28<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font><font class="str">'JPEG'</font><font class="kw">);<br><br></font>$pdf<font class="kw">-&gt;</font>Output<font class="kw">();<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>
<BR>
View the result <A HREF="ex45.pdf" TARGET="_blank">here</A>.
<H4 CLASS="st">Download</H4><A HREF="script45.zip">ZIP</A> | <A HREF="script45.tgz">TGZ</A>
</BODY>
</HTML>
