<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Geometric figures</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY ONLOAD="if(window.focus) window.focus()">
<H2>Geometric figures</H2>
<H4 CLASS="st">Informations</H4>Author: <A HREF="http://dhs.sitio.net" TARGET="_blank">David Hernández Sanz</A><BR>License: Freeware
<H4 CLASS="st">Description</H4>This extension allows to draw lines, rectangles, ellipses, polygons and curves with line style. Public methods are:<BR>
<BR>
&#x2022; <TT>SetLineStyle($style: array)</TT><BR>
<BR>
Sets line style. Parameters are:<BR>
<BR>
  - <TT>style</TT>: an array with the following possible keys:<BR>
<BR>
    . width: width of the line in user units.<BR>
    . cap: type of cap to put on the line (butt, round, square). The difference between "square" and "butt" is that "square" projects a flat end past the end of the line.<BR>
    . join: miter, round, or bevel.<BR>
    . dash: dash pattern. Is 0 (without dash) or array with series of length values, which are the lengths of the on and off dashes.<BR>
    . phase: modifier of the dash pattern which is used to shift the point at which the pattern starts.<BR>
    . color: draw color. Array with components (red, green, blue).<BR>
<BR>
&#x2022; <TT>Line($x1: float, $y1: float, $x2: float, $y2: float, $style: array)</TT><BR>
<BR>
Draws a line. Overrides the method from FPDF. Parameters are:<BR>
<BR>
  - <TT>x1</TT>, <TT>y1</TT>: start point.<BR>
  - <TT>x2</TT>, <TT>y2</TT>: end point.<BR>
  - <TT>style</TT>: line style (array like for SetLineStyle).<BR>
<BR>
&#x2022; <TT>Rect($x: float, $y: float, $w: float, $h: float, $style: string, $border_style: array, $fill_color: array)</TT><BR>
<BR>
Draws a rectangle. Overrides the method from FPDF. Parameters are:<BR>
<BR>
  - <TT>x</TT>, <TT>y</TT>: top left corner.<BR>
  - <TT>w</TT>, <TT>h</TT>: width and height.<BR>
  - <TT>style</TT>: style of rectangle (draw and/or fill: D, F, DF, FD).<BR>
  - <TT>border_style</TT>: border style of rectangle. Array with index: (all => style) for all borders, or (L => style, T => style, R => style, B => style) for each border. Style is an array like for SetLineStyle.<BR>
  - <TT>fill_color</TT>: fill color. Array with components (red, green, blue).<BR>
<BR>
&#x2022; <TT>Curve($x0: float, $y0: float, $x1: float, $y1: float, $x2: float, $y2: float, $x3: float, $y3: float, $style: string, $line_style: array, $fill_color: array)</TT><BR>
<BR>
Draws a Bézier curve. Parameters are:<BR>
<BR>
  - <TT>x0</TT>, <TT>y0</TT>: start point.<BR>
  - <TT>x1</TT>, <TT>y1</TT>: control point 1.<BR>
  - <TT>x2</TT>, <TT>y2</TT>: control point 2.<BR>
  - <TT>x3</TT>, <TT>y3</TT>: end point.<BR>
  - <TT>style</TT>: style of rectangle (draw and/or fill: D, F, DF, FD).<BR>
  - <TT>line_style</TT>: line style for curve. Array like for SetLineStyle.<BR>
  - <TT>fill_color</TT>: fill color. Array with components (red, green, blue).<BR>
<BR>
&#x2022; <TT>Ellipse($x0: float, $y0: float, $rx: float, $ry: float, $angle: float, $astart: float, $afinish: float, $style: string, $line_style: array, $fill_color: array, $nSeg: integer)</TT><BR>
<BR>
Draws an ellipse. Parameters are:<BR>
<BR>
  - <TT>x0</TT>, <TT>y0</TT>: center point.<BR>
  - <TT>rx</TT>, <TT>ry</TT>: horizontal and vertical radius (if ry is 0, this is a circle).<BR>
  - <TT>angle</TT>: orientation angle (anti-clockwise).<BR>
  - <TT>astart</TT>: start angle.<BR>
  - <TT>afinish</TT>: finish angle.<BR>
  - <TT>style</TT>: style of ellipse (draw and/or fill: D, F, DF, FD, C (D + close)).<BR>
  - <TT>line_style</TT>: line style for ellipse. Array like for SetLineStyle.<BR>
  - <TT>fill_color</TT>: fill color. Array with components (red, green, blue).<BR>
  - <TT>nSeg</TT>: ellipse is made up of nSeg Bézier curves.<BR>
<BR>
&#x2022; <TT>Circle($x0: float, $y0: float, $r: float, $astart: float, $afinish: float, $style: string, $line_style: array, $fill_color: array, $nSeg: integer)</TT><BR>
<BR>
Draws a circle. Parameters are:<BR>
<BR>
  - <TT>x0</TT>, <TT>y0</TT>: center point.<BR>
  - <TT>r</TT>: radius.<BR>
  - <TT>astart</TT>: start angle.<BR>
  - <TT>afinish</TT>: finish angle.<BR>
  - <TT>style</TT>: style of circle (draw and/or fill: D, F, DF, FD, C (D + close)).<BR>
  - <TT>line_style</TT>: line style for circle. Array like for SetLineStyle.<BR>
  - <TT>fill_color</TT>: fill color. Array with components (red, green, blue).<BR>
  - <TT>nSeg</TT>: circle is made up of nSeg Bézier curves.<BR>
<BR>
&#x2022; <TT>Polygon($p: array, $style: string, $line_style: array, $fill_color: array)</TT><BR>
<BR>
Draws a polygon. Parameters are:<BR>
<BR>
  - <TT>p</TT>: points. Array with values x0, y0, x1, y1,..., x(np-1), y(np-1).<BR>
  - <TT>style</TT>: style of polygon (draw and/or fill: D, F, DF, FD).<BR>
  - <TT>line_style</TT>: line style. Array with index (all => style) for all borders, or (0..np-1 => style) for each border. Style is an array like for SetLineStyle.<BR>
  - <TT>fill_color</TT>: fill color. Array with components (red, green, blue)<BR>
<BR>
&#x2022; <TT>RegularPolygon($x0: float, $y0: float, $r: float, $ns: Integer, $angle: float, $circle: boolean, $style: string, $line_style: array, $fill_color: array, $circle_style: array, $circle_line_style: array, $circle_fill_color: array)</TT><BR>
<BR>
Draws a regular polygon. Parameters are:<BR>
<BR>
  - <TT>x0</TT>, <TT>y0</TT>: center point.<BR>
  - <TT>r</TT>: radius of circumscribed circle.<BR>
  - <TT>ns</TT>: number of sides.<BR>
  - <TT>angle</TT>: orientation angle (anti-clockwise).<BR>
  - <TT>circle</TT>: draw circumscribed circle or not.<BR>
  - <TT>style</TT>: style of polygon (draw and/or fill: D, F, DF, FD).<BR>
  - <TT>line_style</TT>: line style. Array with index (all => style) for all borders, or (0..ns-1 => style) for each border. Style is an array like for SetLineStyle.<BR>
  - <TT>fill_color</TT>: fill color. Array with components (red, green, blue).<BR>
  - <TT>circle_style</TT>: style of circumscribed circle (draw and/or fill: D, F, DF, FD).<BR>
  - <TT>circle_line_style</TT>: line style for circumscribed circle. Array like for SetLineStyle.<BR>
  - <TT>circle_fill_color</TT>: fill color for circumscribed circle. Array with components (red, green, blue).<BR>
<BR>
&#x2022; <TT>StarPolygon($x0: float, $y0: float, $r: float, $nv: Integer, $ng: Integer, $angle: float, $circle: boolean, $style: string, $line_style: array, $fill_color: array, $circle_style: array, $circle_line_style: array, $circle_fill_color: array)</TT><BR>
<BR>
Draws a star polygon. Parameters are:<BR>
<BR>
  - <TT>x0</TT>, <TT>y0</TT>: center point.<BR>
  - <TT>r</TT>: radius of circumscribed circle.<BR>
  - <TT>nv</TT>: number of vertices.<BR>
  - <TT>ng</TT>: number of gaps (ng % nv = 1 => regular polygon).<BR>
  - <TT>angle</TT>: orientation angle (anti-clockwise).<BR>
  - <TT>circle</TT>: draw circumscribed circle or not.<BR>
  - <TT>style</TT>: style of polygon (draw and/or fill) (D, F, DF, FD).<BR>
  - <TT>line_style</TT>: line style. Array with index (all => style) for all borders, or (0..n-1 => style) for each border. Style is an array like for SetLineStyle.<BR>
  - <TT>fill_color</TT>: fill color. Array with components (red, green, blue).<BR>
  - <TT>circle_style</TT>: style of circumscribed circle (draw and/or fill) (D, F, DF, FD) (if draw).<BR>
  - <TT>circle_line_style</TT>: line style for circumscribed circle. Array like for SetLineStyle (if draw).<BR>
  - <TT>circle_fill_color</TT>: fill color for circumscribed circle. Array with components (red, green, blue).<BR>
<BR>
&#x2022; <TT>RoundedRect($x: float, $y: float, $w: float, $h: float, $r: float, $round_corner: string, $style: string, $border_style: string, $fill_color: array)</TT><BR>
<BR>
Draws a rounded rectangle. Parameters are:<BR>
<BR>
  - <TT>x</TT>, <TT>y</TT>: top left corner.<BR>
  - <TT>w</TT>, <TT>h</TT>: width and height.<BR>
  - <TT>r</TT>: radius of the rounded corners.<BR>
  - <TT>round_corner</TT>: draws rounded corners or not. String with a 0 (not rounded i-corner) or 1 (rounded i-corner) in i-position. Positions are, in order: top left, top right, bottom right and bottom left.<BR>
  - <TT>style</TT>: style of rectangle (draw and/or fill: D, F, DF, FD).<BR>
  - <TT>border_style</TT>: border style of rectangle. Array like for SetLineStyle.<BR>
  - <TT>fill_color</TT>: fill color. Array with components (red, green, blue).
<H4 CLASS="st">Source</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'fpdf.php'</font><font class="kw">);<br><br>class </font>PDF_Draw <font class="kw">extends </font>FPDF <font class="kw">{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Sets line style<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Line style. Array with keys among the following:<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. width: Width of the line in user units<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. cap: Type of cap to put on the line (butt, round, square). The difference between 'square' and 'butt' is that 'square' projects a flat end past the end of the line.<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. join: miter, round or bevel<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. dash: Dash pattern. Is 0 (without dash) or array with series of length values, which are the lengths of the on and off dashes.<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For example: (2) represents 2 on, 2 off, 2 on , 2 off ...<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(2,1) is 2 on, 1 off, 2 on, 1 off.. etc<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. phase: Modifier of the dash pattern which is used to shift the point at which the pattern starts<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. color: Draw color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>SetLineStyle<font class="kw">(</font>$style<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>extract<font class="kw">(</font>$style<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$width<font class="kw">)) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$width_prev <font class="kw">= </font>$<font class="kw">this-&gt;</font>LineWidth<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetLineWidth<font class="kw">(</font>$width<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>LineWidth <font class="kw">= </font>$width_prev<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$cap<font class="kw">)) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ca <font class="kw">= array(</font><font class="str">'butt' </font><font class="kw">=&gt; </font>0<font class="kw">, </font><font class="str">'round'</font><font class="kw">=&gt; </font>1<font class="kw">, </font><font class="str">'square' </font><font class="kw">=&gt; </font>2<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$ca<font class="kw">[</font>$cap<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$ca<font class="kw">[</font>$cap<font class="kw">] . </font><font class="str">' J'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$join<font class="kw">)) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ja <font class="kw">= array(</font><font class="str">'miter' </font><font class="kw">=&gt; </font>0<font class="kw">, </font><font class="str">'round' </font><font class="kw">=&gt; </font>1<font class="kw">, </font><font class="str">'bevel' </font><font class="kw">=&gt; </font>2<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$ja<font class="kw">[</font>$join<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$ja<font class="kw">[</font>$join<font class="kw">] . </font><font class="str">' j'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$dash<font class="kw">)) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dash_string <font class="kw">= </font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$dash<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>ereg<font class="kw">(</font><font class="str">'^.+,'</font><font class="kw">, </font>$dash<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$tab <font class="kw">= </font>explode<font class="kw">(</font><font class="str">','</font><font class="kw">, </font>$dash<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$tab <font class="kw">= array(</font>$dash<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dash_string <font class="kw">= </font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (</font>$tab <font class="kw">as </font>$i <font class="kw">=&gt; </font>$v<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$i <font class="kw">&gt; </font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dash_string <font class="kw">.= </font><font class="str">' '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dash_string <font class="kw">.= </font>sprintf<font class="kw">(</font><font class="str">'%.2f'</font><font class="kw">, </font>$v<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isset(</font>$phase<font class="kw">) || !</font>$dash<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$phase <font class="kw">= </font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'[%s] %.2f d'</font><font class="kw">, </font>$dash_string<font class="kw">, </font>$phase<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$color<font class="kw">)) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">) = </font>$color<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetDrawColor<font class="kw">(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a line<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x1, y1: Start point<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x2, y2: End point<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Line style. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>Line<font class="kw">(</font>$x1<font class="kw">, </font>$y1<font class="kw">, </font>$x2<font class="kw">, </font>$y2<font class="kw">, </font>$style <font class="kw">= </font>null<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$style<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetLineStyle<font class="kw">(</font>$style<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">parent::</font>Line<font class="kw">(</font>$x1<font class="kw">, </font>$y1<font class="kw">, </font>$x2<font class="kw">, </font>$y2<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a rectangle<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x, y: Top left corner<br>&nbsp;&nbsp;&nbsp;&nbsp;// - w, h: Width and height<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Style of rectangle (draw and/or fill: D, F, DF, FD)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - border_style: Border style of rectangle. Array with some of this index<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. all: Line style of all borders. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. L: Line style of left border. null (no border) or array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. T: Line style of top border. null (no border) or array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. R: Line style of right border. null (no border) or array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. B: Line style of bottom border. null (no border) or array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - fill_color: Fill color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>Rect<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">, </font>$h<font class="kw">, </font>$style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$border_style <font class="kw">= </font>null<font class="kw">, </font>$fill_color <font class="kw">= </font>null<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(</font>false <font class="kw">=== </font>strpos<font class="kw">(</font>$style<font class="kw">, </font><font class="str">'F'</font><font class="kw">)) &amp;&amp; </font>$fill_color<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">) = </font>$fill_color<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetFillColor<font class="kw">(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (</font>$style<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'F'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$border_style <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">parent::</font>Rect<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">, </font>$h<font class="kw">, </font>$style<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'DF'</font><font class="kw">: case </font><font class="str">'FD'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!</font>$border_style <font class="kw">|| isset(</font>$border_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">])) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$border_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">])) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetLineStyle<font class="kw">(</font>$border_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$border_style <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$style <font class="kw">= </font><font class="str">'F'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">parent::</font>Rect<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">, </font>$h<font class="kw">, </font>$style<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!</font>$border_style <font class="kw">|| isset(</font>$border_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">])) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$border_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">]) &amp;&amp; </font>$border_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">]) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetLineStyle<font class="kw">(</font>$border_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$border_style <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">parent::</font>Rect<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">, </font>$h<font class="kw">, </font>$style<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$border_style<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$border_style<font class="kw">[</font><font class="str">'L'</font><font class="kw">]) &amp;&amp; </font>$border_style<font class="kw">[</font><font class="str">'L'</font><font class="kw">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Line<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">, </font>$x<font class="kw">, </font>$y <font class="kw">+ </font>$h<font class="kw">, </font>$border_style<font class="kw">[</font><font class="str">'L'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$border_style<font class="kw">[</font><font class="str">'T'</font><font class="kw">]) &amp;&amp; </font>$border_style<font class="kw">[</font><font class="str">'T'</font><font class="kw">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Line<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">, </font>$x <font class="kw">+ </font>$w<font class="kw">, </font>$y<font class="kw">, </font>$border_style<font class="kw">[</font><font class="str">'T'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$border_style<font class="kw">[</font><font class="str">'R'</font><font class="kw">]) &amp;&amp; </font>$border_style<font class="kw">[</font><font class="str">'R'</font><font class="kw">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Line<font class="kw">(</font>$x <font class="kw">+ </font>$w<font class="kw">, </font>$y<font class="kw">, </font>$x <font class="kw">+ </font>$w<font class="kw">, </font>$y <font class="kw">+ </font>$h<font class="kw">, </font>$border_style<font class="kw">[</font><font class="str">'R'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$border_style<font class="kw">[</font><font class="str">'B'</font><font class="kw">]) &amp;&amp; </font>$border_style<font class="kw">[</font><font class="str">'B'</font><font class="kw">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Line<font class="kw">(</font>$x<font class="kw">, </font>$y <font class="kw">+ </font>$h<font class="kw">, </font>$x <font class="kw">+ </font>$w<font class="kw">, </font>$y <font class="kw">+ </font>$h<font class="kw">, </font>$border_style<font class="kw">[</font><font class="str">'B'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a Bézier curve (the Bézier curve is tangent to the line between the control points at either end of the curve)<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x0, y0: Start point<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x1, y1: Control point 1<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x2, y2: Control point 2<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x3, y3: End point<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Style of rectangule (draw and/or fill: D, F, DF, FD)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - line_style: Line style for curve. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - fill_color: Fill color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>Curve<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">, </font>$x1<font class="kw">, </font>$y1<font class="kw">, </font>$x2<font class="kw">, </font>$y2<font class="kw">, </font>$x3<font class="kw">, </font>$y3<font class="kw">, </font>$style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$line_style <font class="kw">= </font>null<font class="kw">, </font>$fill_color <font class="kw">= </font>null<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(</font>false <font class="kw">=== </font>strpos<font class="kw">(</font>$style<font class="kw">, </font><font class="str">'F'</font><font class="kw">)) &amp;&amp; </font>$fill_color<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">) = </font>$fill_color<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetFillColor<font class="kw">(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (</font>$style<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'F'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'f'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$line_style <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'FD'</font><font class="kw">: case </font><font class="str">'DF'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'B'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'S'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$line_style<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetLineStyle<font class="kw">(</font>$line_style<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Point<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Curve<font class="kw">(</font>$x1<font class="kw">, </font>$y1<font class="kw">, </font>$x2<font class="kw">, </font>$y2<font class="kw">, </font>$x3<font class="kw">, </font>$y3<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$op<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws an ellipse<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x0, y0: Center point<br>&nbsp;&nbsp;&nbsp;&nbsp;// - rx, ry: Horizontal and vertical radius (if ry = 0, draws a circle)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - angle: Orientation angle (anti-clockwise)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - astart: Start angle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - afinish: Finish angle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Style of ellipse (draw and/or fill: D, F, DF, FD, C (D + close))<br>&nbsp;&nbsp;&nbsp;&nbsp;// - line_style: Line style for ellipse. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - fill_color: Fill color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - nSeg: Ellipse is made up of nSeg Bézier curves<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>Ellipse<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">, </font>$rx<font class="kw">, </font>$ry <font class="kw">= </font>0<font class="kw">, </font>$angle <font class="kw">= </font>0<font class="kw">, </font>$astart <font class="kw">= </font>0<font class="kw">, </font>$afinish <font class="kw">= </font>360<font class="kw">, </font>$style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$line_style <font class="kw">= </font>null<font class="kw">, </font>$fill_color <font class="kw">= </font>null<font class="kw">, </font>$nSeg <font class="kw">= </font>8<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$rx<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(</font>false <font class="kw">=== </font>strpos<font class="kw">(</font>$style<font class="kw">, </font><font class="str">'F'</font><font class="kw">)) &amp;&amp; </font>$fill_color<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">) = </font>$fill_color<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetFillColor<font class="kw">(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (</font>$style<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'F'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'f'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$line_style <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'FD'</font><font class="kw">: case </font><font class="str">'DF'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'B'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'C'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'s'</font><font class="kw">; </font><font class="cmt">// small 's' means closing the path as well<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'S'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$line_style<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetLineStyle<font class="kw">(</font>$line_style<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!</font>$ry<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ry <font class="kw">= </font>$rx<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$rx <font class="kw">*= </font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ry <font class="kw">*= </font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$nSeg <font class="kw">&lt; </font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$nSeg <font class="kw">= </font>2<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$astart <font class="kw">= </font>deg2rad<font class="kw">((float) </font>$astart<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$afinish <font class="kw">= </font>deg2rad<font class="kw">((float) </font>$afinish<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$totalAngle <font class="kw">= </font>$afinish <font class="kw">- </font>$astart<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dt <font class="kw">= </font>$totalAngle<font class="kw">/</font>$nSeg<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dtm <font class="kw">= </font>$dt<font class="kw">/</font>3<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$x0 <font class="kw">*= </font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$y0 <font class="kw">= (</font>$<font class="kw">this-&gt;</font>h <font class="kw">- </font>$y0<font class="kw">) * </font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$angle <font class="kw">!= </font>0<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a <font class="kw">= -</font>deg2rad<font class="kw">((float) </font>$angle<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'q %.2f %.2f %.2f %.2f %.2f %.2f cm'</font><font class="kw">, </font>cos<font class="kw">(</font>$a<font class="kw">), -</font>1 <font class="kw">* </font>sin<font class="kw">(</font>$a<font class="kw">), </font>sin<font class="kw">(</font>$a<font class="kw">), </font>cos<font class="kw">(</font>$a<font class="kw">), </font>$x0<font class="kw">, </font>$y0<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$x0 <font class="kw">= </font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$y0 <font class="kw">= </font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$t1 <font class="kw">= </font>$astart<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a0 <font class="kw">= </font>$x0 <font class="kw">+ (</font>$rx <font class="kw">* </font>cos<font class="kw">(</font>$t1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b0 <font class="kw">= </font>$y0 <font class="kw">+ (</font>$ry <font class="kw">* </font>sin<font class="kw">(</font>$t1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$c0 <font class="kw">= -</font>$rx <font class="kw">* </font>sin<font class="kw">(</font>$t1<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$d0 <font class="kw">= </font>$ry <font class="kw">* </font>cos<font class="kw">(</font>$t1<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Point<font class="kw">(</font>$a0 <font class="kw">/ </font>$<font class="kw">this-&gt;</font>k<font class="kw">, </font>$<font class="kw">this-&gt;</font>h <font class="kw">- (</font>$b0 <font class="kw">/ </font>$<font class="kw">this-&gt;</font>k<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (</font>$i <font class="kw">= </font>1<font class="kw">; </font>$i <font class="kw">&lt;= </font>$nSeg<font class="kw">; </font>$i<font class="kw">++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draw this bit of the total curve<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$t1 <font class="kw">= (</font>$i <font class="kw">* </font>$dt<font class="kw">) + </font>$astart<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a1 <font class="kw">= </font>$x0 <font class="kw">+ (</font>$rx <font class="kw">* </font>cos<font class="kw">(</font>$t1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b1 <font class="kw">= </font>$y0 <font class="kw">+ (</font>$ry <font class="kw">* </font>sin<font class="kw">(</font>$t1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$c1 <font class="kw">= -</font>$rx <font class="kw">* </font>sin<font class="kw">(</font>$t1<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$d1 <font class="kw">= </font>$ry <font class="kw">* </font>cos<font class="kw">(</font>$t1<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Curve<font class="kw">((</font>$a0 <font class="kw">+ (</font>$c0 <font class="kw">* </font>$dtm<font class="kw">)) / </font>$<font class="kw">this-&gt;</font>k<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>h <font class="kw">- ((</font>$b0 <font class="kw">+ (</font>$d0 <font class="kw">* </font>$dtm<font class="kw">)) / </font>$<font class="kw">this-&gt;</font>k<font class="kw">),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</font>$a1 <font class="kw">- (</font>$c1 <font class="kw">* </font>$dtm<font class="kw">)) / </font>$<font class="kw">this-&gt;</font>k<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>h <font class="kw">- ((</font>$b1 <font class="kw">- (</font>$d1 <font class="kw">* </font>$dtm<font class="kw">)) / </font>$<font class="kw">this-&gt;</font>k<font class="kw">),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a1 <font class="kw">/ </font>$<font class="kw">this-&gt;</font>k<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>h <font class="kw">- (</font>$b1 <font class="kw">/ </font>$<font class="kw">this-&gt;</font>k<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a0 <font class="kw">= </font>$a1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$b0 <font class="kw">= </font>$b1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$c0 <font class="kw">= </font>$c1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$d0 <font class="kw">= </font>$d1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$op<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$angle <font class="kw">!=</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'Q'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a circle<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x0, y0: Center point<br>&nbsp;&nbsp;&nbsp;&nbsp;// - r: Radius<br>&nbsp;&nbsp;&nbsp;&nbsp;// - astart: Start angle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - afinish: Finish angle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Style of circle (draw and/or fill) (D, F, DF, FD, C (D + close))<br>&nbsp;&nbsp;&nbsp;&nbsp;// - line_style: Line style for circle. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - fill_color: Fill color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - nSeg: Ellipse is made up of nSeg Bézier curves<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>Circle<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">, </font>$r<font class="kw">, </font>$astart <font class="kw">= </font>0<font class="kw">, </font>$afinish <font class="kw">= </font>360<font class="kw">, </font>$style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$line_style <font class="kw">= </font>null<font class="kw">, </font>$fill_color <font class="kw">= </font>null<font class="kw">, </font>$nSeg <font class="kw">= </font>8<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Ellipse<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">, </font>$r<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font>$astart<font class="kw">, </font>$afinish<font class="kw">, </font>$style<font class="kw">, </font>$line_style<font class="kw">, </font>$fill_color<font class="kw">, </font>$nSeg<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a polygon<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - p: Points. Array with values x0, y0, x1, y1,..., x(np-1), y(np - 1)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Style of polygon (draw and/or fill) (D, F, DF, FD)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - line_style: Line style. Array with one of this index<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. all: Line style of all lines. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. 0..np-1: Line style of each line. Item is 0 (not line) or like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - fill_color: Fill color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>Polygon<font class="kw">(</font>$p<font class="kw">, </font>$style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$line_style <font class="kw">= </font>null<font class="kw">, </font>$fill_color <font class="kw">= </font>null<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$np <font class="kw">= </font>count<font class="kw">(</font>$p<font class="kw">) / </font>2<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(</font>false <font class="kw">=== </font>strpos<font class="kw">(</font>$style<font class="kw">, </font><font class="str">'F'</font><font class="kw">)) &amp;&amp; </font>$fill_color<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">) = </font>$fill_color<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetFillColor<font class="kw">(</font>$r<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (</font>$style<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'F'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$line_style <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'f'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'FD'</font><font class="kw">: case </font><font class="str">'DF'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'B'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'S'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$draw <font class="kw">= </font>true<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$line_style<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$line_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetLineStyle<font class="kw">(</font>$line_style<font class="kw">[</font><font class="str">'all'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else { </font><font class="cmt">// 0 .. (np - 1), op = {B, S}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$draw <font class="kw">= </font>false<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font><font class="str">'B' </font><font class="kw">== </font>$op<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'f'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Point<font class="kw">(</font>$p<font class="kw">[</font>0<font class="kw">], </font>$p<font class="kw">[</font>1<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (</font>$i <font class="kw">= </font>2<font class="kw">; </font>$i <font class="kw">&lt; (</font>$np <font class="kw">* </font>2<font class="kw">); </font>$i <font class="kw">= </font>$i <font class="kw">+ </font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$p<font class="kw">[</font>$i<font class="kw">], </font>$p<font class="kw">[</font>$i <font class="kw">+ </font>1<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$p<font class="kw">[</font>0<font class="kw">], </font>$p<font class="kw">[</font>1<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$op<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p<font class="kw">[</font>$np <font class="kw">* </font>2<font class="kw">] = </font>$p<font class="kw">[</font>0<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p<font class="kw">[(</font>$np <font class="kw">* </font>2<font class="kw">) + </font>1<font class="kw">] = </font>$p<font class="kw">[</font>1<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (</font>$i <font class="kw">= </font>0<font class="kw">; </font>$i <font class="kw">&lt; </font>$np<font class="kw">; </font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!empty(</font>$line_style<font class="kw">[</font>$i<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Line<font class="kw">(</font>$p<font class="kw">[</font>$i <font class="kw">* </font>2<font class="kw">], </font>$p<font class="kw">[(</font>$i <font class="kw">* </font>2<font class="kw">) + </font>1<font class="kw">], </font>$p<font class="kw">[(</font>$i <font class="kw">* </font>2<font class="kw">) + </font>2<font class="kw">], </font>$p<font class="kw">[(</font>$i <font class="kw">* </font>2<font class="kw">) + </font>3<font class="kw">], </font>$line_style<font class="kw">[</font>$i<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$draw<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Point<font class="kw">(</font>$p<font class="kw">[</font>0<font class="kw">], </font>$p<font class="kw">[</font>1<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (</font>$i <font class="kw">= </font>2<font class="kw">; </font>$i <font class="kw">&lt; (</font>$np <font class="kw">* </font>2<font class="kw">); </font>$i <font class="kw">= </font>$i <font class="kw">+ </font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$p<font class="kw">[</font>$i<font class="kw">], </font>$p<font class="kw">[</font>$i <font class="kw">+ </font>1<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$p<font class="kw">[</font>0<font class="kw">], </font>$p<font class="kw">[</font>1<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$op<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a regular polygon<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x0, y0: Center point<br>&nbsp;&nbsp;&nbsp;&nbsp;// - r: Radius of circumscribed circle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - ns: Number of sides<br>&nbsp;&nbsp;&nbsp;&nbsp;// - angle: Orientation angle (anti-clockwise)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - circle: Draw circumscribed circle or not<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Style of polygon (draw and/or fill) (D, F, DF, FD)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - line_style: Line style. Array with one of this index<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. all: Line style of all lines. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. 0..ns-1: Line style of each line. Item is 0 (not line) or like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - fill_color: Fill color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - circle_style: Style of circumscribed circle (draw and/or fill) (D, F, DF, FD) (if draw)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - circle_line_style: Line style for circumscribed circle. Array like for SetLineStyle (if draw)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - circle_fill_color: Fill color for circumscribed circle. Array with components (red, green, blue) (if draw fill circle)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>RegularPolygon<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">, </font>$r<font class="kw">, </font>$ns<font class="kw">, </font>$angle <font class="kw">= </font>0<font class="kw">, </font>$circle <font class="kw">= </font>false<font class="kw">, </font>$style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$line_style <font class="kw">= </font>null<font class="kw">, </font>$fill_color <font class="kw">= </font>null<font class="kw">, </font>$circle_style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$circle_line_style <font class="kw">= </font>null<font class="kw">, </font>$circle_fill_color <font class="kw">= </font>null<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$ns <font class="kw">&lt; </font>3<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ns <font class="kw">= </font>3<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$circle<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Circle<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">, </font>$r<font class="kw">, </font>0<font class="kw">, </font>360<font class="kw">, </font>$circle_style<font class="kw">, </font>$circle_line_style<font class="kw">, </font>$circle_fill_color<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (</font>$i <font class="kw">= </font>0<font class="kw">; </font>$i <font class="kw">&lt; </font>$ns<font class="kw">; </font>$i<font class="kw">++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a <font class="kw">= </font>$angle <font class="kw">+ (</font>$i <font class="kw">* </font>360 <font class="kw">/ </font>$ns<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a_rad <font class="kw">= </font>deg2rad<font class="kw">((float) </font>$a<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p<font class="kw">[] = </font>$x0 <font class="kw">+ (</font>$r <font class="kw">* </font>sin<font class="kw">(</font>$a_rad<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p<font class="kw">[] = </font>$y0 <font class="kw">+ (</font>$r <font class="kw">* </font>cos<font class="kw">(</font>$a_rad<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Polygon<font class="kw">(</font>$p<font class="kw">, </font>$style<font class="kw">, </font>$line_style<font class="kw">, </font>$fill_color<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a star polygon<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x0, y0: Center point<br>&nbsp;&nbsp;&nbsp;&nbsp;// - r: Radius of circumscribed circle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - nv: Number of vertices<br>&nbsp;&nbsp;&nbsp;&nbsp;// - ng: Number of gaps (ng % nv = 1 =&gt; regular polygon)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - angle: Orientation angle (anti-clockwise)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - circle: Draw circumscribed circle or not<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Style of polygon (draw and/or fill) (D, F, DF, FD)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - line_style: Line style. Array with one of this index<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. all: Line style of all lines. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;. 0..n-1: Line style of each line. Item is 0 (not line) or like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - fill_color: Fill color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - circle_style: Style of circumscribed circle (draw and/or fill) (D, F, DF, FD) (if draw)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - circle_line_style: Line style for circumscribed circle. Array like for SetLineStyle (if draw)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - circle_fill_color: Fill color for circumscribed circle. Array with components (red, green, blue) (if draw fill circle)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>StarPolygon<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">, </font>$r<font class="kw">, </font>$nv<font class="kw">, </font>$ng<font class="kw">, </font>$angle <font class="kw">= </font>0<font class="kw">, </font>$circle <font class="kw">= </font>false<font class="kw">, </font>$style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$line_style <font class="kw">= </font>null<font class="kw">, </font>$fill_color <font class="kw">= </font>null<font class="kw">, </font>$circle_style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$circle_line_style <font class="kw">= </font>null<font class="kw">, </font>$circle_fill_color <font class="kw">= </font>null<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$nv <font class="kw">&lt; </font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$nv <font class="kw">= </font>2<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$circle<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Circle<font class="kw">(</font>$x0<font class="kw">, </font>$y0<font class="kw">, </font>$r<font class="kw">, </font>0<font class="kw">, </font>360<font class="kw">, </font>$circle_style<font class="kw">, </font>$circle_line_style<font class="kw">, </font>$circle_fill_color<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p2 <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$visited <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (</font>$i <font class="kw">= </font>0<font class="kw">; </font>$i <font class="kw">&lt; </font>$nv<font class="kw">; </font>$i<font class="kw">++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a <font class="kw">= </font>$angle <font class="kw">+ (</font>$i <font class="kw">* </font>360 <font class="kw">/ </font>$nv<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a_rad <font class="kw">= </font>deg2rad<font class="kw">((float) </font>$a<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p2<font class="kw">[] = </font>$x0 <font class="kw">+ (</font>$r <font class="kw">* </font>sin<font class="kw">(</font>$a_rad<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p2<font class="kw">[] = </font>$y0 <font class="kw">+ (</font>$r <font class="kw">* </font>cos<font class="kw">(</font>$a_rad<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$visited<font class="kw">[] = </font>false<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i <font class="kw">= </font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p<font class="kw">[] = </font>$p2<font class="kw">[</font>$i <font class="kw">* </font>2<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$p<font class="kw">[] = </font>$p2<font class="kw">[(</font>$i <font class="kw">* </font>2<font class="kw">) + </font>1<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$visited<font class="kw">[</font>$i<font class="kw">] = </font>true<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i <font class="kw">+= </font>$ng<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i <font class="kw">%= </font>$nv<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (!</font>$visited<font class="kw">[</font>$i<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Polygon<font class="kw">(</font>$p<font class="kw">, </font>$style<font class="kw">, </font>$line_style<font class="kw">, </font>$fill_color<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a rounded rectangle<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x, y: Top left corner<br>&nbsp;&nbsp;&nbsp;&nbsp;// - w, h: Width and height<br>&nbsp;&nbsp;&nbsp;&nbsp;// - r: Radius of the rounded corners<br>&nbsp;&nbsp;&nbsp;&nbsp;// - round_corner: Draws rounded corner or not. String with a 0 (not rounded i-corner) or 1 (rounded i-corner) in i-position. Positions are, in order and begin to 0: top left, top right, bottom right and bottom left<br>&nbsp;&nbsp;&nbsp;&nbsp;// - style: Style of rectangle (draw and/or fill) (D, F, DF, FD)<br>&nbsp;&nbsp;&nbsp;&nbsp;// - border_style: Border style of rectangle. Array like for SetLineStyle<br>&nbsp;&nbsp;&nbsp;&nbsp;// - fill_color: Fill color. Array with components (red, green, blue)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>RoundedRect<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">, </font>$h<font class="kw">, </font>$r<font class="kw">, </font>$round_corner <font class="kw">= </font><font class="str">'1111'</font><font class="kw">, </font>$style <font class="kw">= </font><font class="str">''</font><font class="kw">, </font>$border_style <font class="kw">= </font>null<font class="kw">, </font>$fill_color <font class="kw">= </font>null<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font><font class="str">'0000' </font><font class="kw">== </font>$round_corner<font class="kw">) </font><font class="cmt">// Not rounded<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Rect<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">, </font>$h<font class="kw">, </font>$style<font class="kw">, </font>$border_style<font class="kw">, </font>$fill_color<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else { </font><font class="cmt">// Rounded<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if (!(</font>false <font class="kw">=== </font>strpos<font class="kw">(</font>$style<font class="kw">, </font><font class="str">'F'</font><font class="kw">)) &amp;&amp; </font>$fill_color<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list(</font>$red<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">) = </font>$fill_color<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetFillColor<font class="kw">(</font>$red<font class="kw">, </font>$g<font class="kw">, </font>$b<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (</font>$style<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'F'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$border_style <font class="kw">= </font>null<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'f'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'FD'</font><font class="kw">: case </font><font class="str">'DF'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'B'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$op <font class="kw">= </font><font class="str">'S'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$border_style<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetLineStyle<font class="kw">(</font>$border_style<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$MyArc <font class="kw">= </font>4 <font class="kw">/ </font>3 <font class="kw">* (</font>sqrt<font class="kw">(</font>2<font class="kw">) - </font>1<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Point<font class="kw">(</font>$x <font class="kw">+ </font>$r<font class="kw">, </font>$y<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$xc <font class="kw">= </font>$x <font class="kw">+ </font>$w <font class="kw">- </font>$r<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$yc <font class="kw">= </font>$y <font class="kw">+ </font>$r<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$xc<font class="kw">, </font>$y<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$round_corner<font class="kw">[</font>0<font class="kw">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Curve<font class="kw">(</font>$xc <font class="kw">+ (</font>$r <font class="kw">* </font>$MyArc<font class="kw">), </font>$yc <font class="kw">- </font>$r<font class="kw">, </font>$xc <font class="kw">+ </font>$r<font class="kw">, </font>$yc <font class="kw">- (</font>$r <font class="kw">* </font>$MyArc<font class="kw">), </font>$xc <font class="kw">+ </font>$r<font class="kw">, </font>$yc<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$x <font class="kw">+ </font>$w<font class="kw">, </font>$y<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$xc <font class="kw">= </font>$x <font class="kw">+ </font>$w <font class="kw">- </font>$r <font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$yc <font class="kw">= </font>$y <font class="kw">+ </font>$h <font class="kw">- </font>$r<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$x <font class="kw">+ </font>$w<font class="kw">, </font>$yc<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$round_corner<font class="kw">[</font>1<font class="kw">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Curve<font class="kw">(</font>$xc <font class="kw">+ </font>$r<font class="kw">, </font>$yc <font class="kw">+ (</font>$r <font class="kw">* </font>$MyArc<font class="kw">), </font>$xc <font class="kw">+ (</font>$r <font class="kw">* </font>$MyArc<font class="kw">), </font>$yc <font class="kw">+ </font>$r<font class="kw">, </font>$xc<font class="kw">, </font>$yc <font class="kw">+ </font>$r<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$x <font class="kw">+ </font>$w<font class="kw">, </font>$y <font class="kw">+ </font>$h<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$xc <font class="kw">= </font>$x <font class="kw">+ </font>$r<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$yc <font class="kw">= </font>$y <font class="kw">+ </font>$h <font class="kw">- </font>$r<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$xc<font class="kw">, </font>$y <font class="kw">+ </font>$h<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$round_corner<font class="kw">[</font>2<font class="kw">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Curve<font class="kw">(</font>$xc <font class="kw">- (</font>$r <font class="kw">* </font>$MyArc<font class="kw">), </font>$yc <font class="kw">+ </font>$r<font class="kw">, </font>$xc <font class="kw">- </font>$r<font class="kw">, </font>$yc <font class="kw">+ (</font>$r <font class="kw">* </font>$MyArc<font class="kw">), </font>$xc <font class="kw">- </font>$r<font class="kw">, </font>$yc<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$x<font class="kw">, </font>$y <font class="kw">+ </font>$h<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$xc <font class="kw">= </font>$x <font class="kw">+ </font>$r<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$yc <font class="kw">= </font>$y <font class="kw">+ </font>$r<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$x<font class="kw">, </font>$yc<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$round_corner<font class="kw">[</font>3<font class="kw">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Curve<font class="kw">(</font>$xc <font class="kw">- </font>$r<font class="kw">, </font>$yc <font class="kw">- (</font>$r <font class="kw">* </font>$MyArc<font class="kw">), </font>$xc <font class="kw">- (</font>$r <font class="kw">* </font>$MyArc<font class="kw">), </font>$yc <font class="kw">- </font>$r<font class="kw">, </font>$xc<font class="kw">, </font>$yc <font class="kw">- </font>$r<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_Line<font class="kw">(</font>$x <font class="kw">+ </font>$r<font class="kw">, </font>$y<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$op<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">/* PRIVATE METHODS */<br><br>&nbsp;&nbsp;&nbsp;&nbsp;// Sets a draw point<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x, y: Point<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>_Point<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'%.2f %.2f m'</font><font class="kw">, </font>$x <font class="kw">* </font>$<font class="kw">this-&gt;</font>k<font class="kw">, (</font>$<font class="kw">this-&gt;</font>h <font class="kw">- </font>$y<font class="kw">) * </font>$<font class="kw">this-&gt;</font>k<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a line from last draw point<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x, y: End point<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>_Line<font class="kw">(</font>$x<font class="kw">, </font>$y<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'%.2f %.2f l'</font><font class="kw">, </font>$x <font class="kw">* </font>$<font class="kw">this-&gt;</font>k<font class="kw">, (</font>$<font class="kw">this-&gt;</font>h <font class="kw">- </font>$y<font class="kw">) * </font>$<font class="kw">this-&gt;</font>k<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Draws a Bézier curve from last draw point<br>&nbsp;&nbsp;&nbsp;&nbsp;// Parameters:<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x1, y1: Control point 1<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x2, y2: Control point 2<br>&nbsp;&nbsp;&nbsp;&nbsp;// - x3, y3: End point<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">function </font>_Curve<font class="kw">(</font>$x1<font class="kw">, </font>$y1<font class="kw">, </font>$x2<font class="kw">, </font>$y2<font class="kw">, </font>$x3<font class="kw">, </font>$y3<font class="kw">) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'%.2f %.2f %.2f %.2f %.2f %.2f c'</font><font class="kw">, </font>$x1 <font class="kw">* </font>$<font class="kw">this-&gt;</font>k<font class="kw">, (</font>$<font class="kw">this-&gt;</font>h <font class="kw">- </font>$y1<font class="kw">) * </font>$<font class="kw">this-&gt;</font>k<font class="kw">, </font>$x2 <font class="kw">* </font>$<font class="kw">this-&gt;</font>k<font class="kw">, (</font>$<font class="kw">this-&gt;</font>h <font class="kw">- </font>$y2<font class="kw">) * </font>$<font class="kw">this-&gt;</font>k<font class="kw">, </font>$x3 <font class="kw">* </font>$<font class="kw">this-&gt;</font>k<font class="kw">, (</font>$<font class="kw">this-&gt;</font>h <font class="kw">- </font>$y3<font class="kw">) * </font>$<font class="kw">this-&gt;</font>k<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br><br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Example</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require_once(</font><font class="str">'draw.php'</font><font class="kw">);<br><br></font>$pdf <font class="kw">= new </font>PDF_Draw<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">(</font><font class="str">'arial'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>10<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br><br></font>$style <font class="kw">= array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.5<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'butt'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font><font class="str">'10,20,5,10'</font><font class="kw">, </font><font class="str">'phase' </font><font class="kw">=&gt; </font>10<font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>255<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">));<br></font>$style2 <font class="kw">= array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.5<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'butt'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font>0<font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>255<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">));<br></font>$style3 <font class="kw">= array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>1<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'round'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'round'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font><font class="str">'2,10'</font><font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>255<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">));<br></font>$style4 <font class="kw">= array(</font><font class="str">'L' </font><font class="kw">=&gt; </font>0<font class="kw">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="str">'T' </font><font class="kw">=&gt; array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.25<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'butt'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font><font class="str">'20,10'</font><font class="kw">, </font><font class="str">'phase' </font><font class="kw">=&gt; </font>10<font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>100<font class="kw">, </font>100<font class="kw">, </font>255<font class="kw">)),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="str">'R' </font><font class="kw">=&gt; array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.50<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'round'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font>0<font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>50<font class="kw">, </font>50<font class="kw">, </font>127<font class="kw">)),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="str">'B' </font><font class="kw">=&gt; array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.75<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'square'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font><font class="str">'30,10,5,10'</font><font class="kw">));<br></font>$style5 <font class="kw">= array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.25<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'butt'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font>0<font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>0<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">));<br></font>$style6 <font class="kw">= array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.5<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'butt'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font><font class="str">'10,10'</font><font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>0<font class="kw">, </font>255<font class="kw">, </font>0<font class="kw">));<br></font>$style7 <font class="kw">= array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.5<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'butt'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font>0<font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>200<font class="kw">, </font>200<font class="kw">, </font>0<font class="kw">));<br><br></font><font class="cmt">// Line<br></font>$pdf<font class="kw">-&gt;</font>Text<font class="kw">(</font>5<font class="kw">, </font>7<font class="kw">, </font><font class="str">'Line examples'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Line<font class="kw">(</font>5<font class="kw">, </font>10<font class="kw">, </font>80<font class="kw">, </font>30<font class="kw">, </font>$style<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Line<font class="kw">(</font>5<font class="kw">, </font>10<font class="kw">, </font>5<font class="kw">, </font>30<font class="kw">, </font>$style2<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Line<font class="kw">(</font>5<font class="kw">, </font>10<font class="kw">, </font>80<font class="kw">, </font>10<font class="kw">, </font>$style3<font class="kw">);<br><br></font><font class="cmt">// Rect<br></font>$pdf<font class="kw">-&gt;</font>Text<font class="kw">(</font>100<font class="kw">, </font>7<font class="kw">, </font><font class="str">'Rectangle examples'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Rect<font class="kw">(</font>100<font class="kw">, </font>10<font class="kw">, </font>40<font class="kw">, </font>20<font class="kw">, </font><font class="str">'DF'</font><font class="kw">, </font>$style4<font class="kw">, array(</font>220<font class="kw">, </font>220<font class="kw">, </font>200<font class="kw">));<br></font>$pdf<font class="kw">-&gt;</font>Rect<font class="kw">(</font>145<font class="kw">, </font>10<font class="kw">, </font>40<font class="kw">, </font>20<font class="kw">, </font><font class="str">'D'</font><font class="kw">, array(</font><font class="str">'all' </font><font class="kw">=&gt; </font>$style3<font class="kw">));<br><br></font><font class="cmt">// Curve<br></font>$pdf<font class="kw">-&gt;</font>Text<font class="kw">(</font>5<font class="kw">, </font>37<font class="kw">, </font><font class="str">'Curve examples'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Curve<font class="kw">(</font>5<font class="kw">, </font>40<font class="kw">, </font>30<font class="kw">, </font>55<font class="kw">, </font>70<font class="kw">, </font>45<font class="kw">, </font>60<font class="kw">, </font>75<font class="kw">, </font>null<font class="kw">, </font>$style6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Curve<font class="kw">(</font>80<font class="kw">, </font>40<font class="kw">, </font>70<font class="kw">, </font>75<font class="kw">, </font>150<font class="kw">, </font>45<font class="kw">, </font>100<font class="kw">, </font>75<font class="kw">, </font><font class="str">'F'</font><font class="kw">, </font>$style6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Curve<font class="kw">(</font>140<font class="kw">, </font>40<font class="kw">, </font>150<font class="kw">, </font>55<font class="kw">, </font>180<font class="kw">, </font>45<font class="kw">, </font>200<font class="kw">, </font>75<font class="kw">, </font><font class="str">'DF'</font><font class="kw">, </font>$style6<font class="kw">, array(</font>200<font class="kw">, </font>220<font class="kw">, </font>200<font class="kw">));<br><br></font><font class="cmt">// Circle and ellipse<br></font>$pdf<font class="kw">-&gt;</font>Text<font class="kw">(</font>5<font class="kw">, </font>82<font class="kw">, </font><font class="str">'Circle and ellipse examples'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetLineStyle<font class="kw">(</font>$style5<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Circle<font class="kw">(</font>25<font class="kw">,</font>105<font class="kw">,</font>20<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Circle<font class="kw">(</font>25<font class="kw">,</font>105<font class="kw">,</font>10<font class="kw">, </font>90<font class="kw">, </font>180<font class="kw">, </font>null<font class="kw">, </font>$style6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Circle<font class="kw">(</font>25<font class="kw">,</font>105<font class="kw">,</font>10<font class="kw">, </font>270<font class="kw">, </font>360<font class="kw">, </font><font class="str">'F'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Circle<font class="kw">(</font>25<font class="kw">,</font>105<font class="kw">,</font>10<font class="kw">, </font>270<font class="kw">, </font>360<font class="kw">, </font><font class="str">'C'</font><font class="kw">, </font>$style6<font class="kw">);<br><br></font>$pdf<font class="kw">-&gt;</font>SetLineStyle<font class="kw">(</font>$style5<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Ellipse<font class="kw">(</font>100<font class="kw">,</font>105<font class="kw">,</font>40<font class="kw">,</font>20<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Ellipse<font class="kw">(</font>100<font class="kw">,</font>105<font class="kw">,</font>20<font class="kw">,</font>10<font class="kw">, </font>0<font class="kw">, </font>90<font class="kw">, </font>180<font class="kw">, </font>null<font class="kw">, </font>$style6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Ellipse<font class="kw">(</font>100<font class="kw">,</font>105<font class="kw">,</font>20<font class="kw">,</font>10<font class="kw">, </font>0<font class="kw">, </font>270<font class="kw">, </font>360<font class="kw">, </font><font class="str">'DF'</font><font class="kw">, </font>$style6<font class="kw">);<br><br></font>$pdf<font class="kw">-&gt;</font>SetLineStyle<font class="kw">(</font>$style5<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Ellipse<font class="kw">(</font>175<font class="kw">,</font>105<font class="kw">,</font>30<font class="kw">,</font>15<font class="kw">, </font>45<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Ellipse<font class="kw">(</font>175<font class="kw">,</font>105<font class="kw">,</font>15<font class="kw">,</font>7.50<font class="kw">, </font>45<font class="kw">, </font>90<font class="kw">, </font>180<font class="kw">, </font>null<font class="kw">, </font>$style6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Ellipse<font class="kw">(</font>175<font class="kw">,</font>105<font class="kw">,</font>15<font class="kw">,</font>7.50<font class="kw">, </font>45<font class="kw">, </font>270<font class="kw">, </font>360<font class="kw">, </font><font class="str">'F'</font><font class="kw">, </font>$style6<font class="kw">, array(</font>220<font class="kw">, </font>200<font class="kw">, </font>200<font class="kw">));<br><br></font><font class="cmt">// Polygon<br></font>$pdf<font class="kw">-&gt;</font>Text<font class="kw">(</font>5<font class="kw">, </font>132<font class="kw">, </font><font class="str">'Polygon examples'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetLineStyle<font class="kw">(array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.5<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'butt'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font>0<font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>0<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">)));<br></font>$pdf<font class="kw">-&gt;</font>Polygon<font class="kw">(array(</font>5<font class="kw">,</font>135<font class="kw">,</font>45<font class="kw">,</font>135<font class="kw">,</font>15<font class="kw">,</font>165<font class="kw">));<br></font>$pdf<font class="kw">-&gt;</font>Polygon<font class="kw">(array(</font>60<font class="kw">,</font>135<font class="kw">,</font>80<font class="kw">,</font>135<font class="kw">,</font>80<font class="kw">,</font>155<font class="kw">,</font>70<font class="kw">,</font>165<font class="kw">,</font>50<font class="kw">,</font>155<font class="kw">), </font><font class="str">'DF'</font><font class="kw">, array(</font>$style6<font class="kw">, </font>$style7<font class="kw">, </font>$style7<font class="kw">, </font>0<font class="kw">, </font>$style6<font class="kw">));<br></font>$pdf<font class="kw">-&gt;</font>Polygon<font class="kw">(array(</font>120<font class="kw">,</font>135<font class="kw">,</font>140<font class="kw">,</font>135<font class="kw">,</font>150<font class="kw">,</font>155<font class="kw">,</font>110<font class="kw">,</font>155<font class="kw">), </font><font class="str">'D'</font><font class="kw">, array(</font>$style6<font class="kw">, </font>0<font class="kw">, </font>$style7<font class="kw">, </font>$style6<font class="kw">));<br></font>$pdf<font class="kw">-&gt;</font>Polygon<font class="kw">(array(</font>160<font class="kw">,</font>135<font class="kw">,</font>190<font class="kw">,</font>155<font class="kw">,</font>170<font class="kw">,</font>155<font class="kw">,</font>200<font class="kw">,</font>160<font class="kw">,</font>160<font class="kw">,</font>165<font class="kw">), </font><font class="str">'DF'</font><font class="kw">, array(</font><font class="str">'all' </font><font class="kw">=&gt; </font>$style6<font class="kw">), array(</font>220<font class="kw">, </font>220<font class="kw">, </font>220<font class="kw">));<br><br></font><font class="cmt">// Regular polygon<br></font>$pdf<font class="kw">-&gt;</font>Text<font class="kw">(</font>5<font class="kw">, </font>172<font class="kw">, </font><font class="str">'Regular polygon examples'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetLineStyle<font class="kw">(</font>$style5<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>RegularPolygon<font class="kw">(</font>20<font class="kw">, </font>190<font class="kw">, </font>15<font class="kw">, </font>6<font class="kw">, </font>0<font class="kw">, </font>1<font class="kw">, </font><font class="str">'F'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>RegularPolygon<font class="kw">(</font>55<font class="kw">, </font>190<font class="kw">, </font>15<font class="kw">, </font>6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>RegularPolygon<font class="kw">(</font>55<font class="kw">, </font>190<font class="kw">, </font>10<font class="kw">, </font>6<font class="kw">, </font>45<font class="kw">, </font>0<font class="kw">, </font><font class="str">'DF'</font><font class="kw">, array(</font>$style6<font class="kw">, </font>0<font class="kw">, </font>$style7<font class="kw">, </font>0<font class="kw">, </font>$style7<font class="kw">, </font>$style7<font class="kw">, </font>$style6<font class="kw">));<br></font>$pdf<font class="kw">-&gt;</font>RegularPolygon<font class="kw">(</font>90<font class="kw">, </font>190<font class="kw">, </font>15<font class="kw">, </font>3<font class="kw">, </font>0<font class="kw">, </font>1<font class="kw">, </font><font class="str">'DF'</font><font class="kw">, array(</font><font class="str">'all' </font><font class="kw">=&gt; </font>$style5<font class="kw">), array(</font>200<font class="kw">, </font>220<font class="kw">, </font>200<font class="kw">), </font><font class="str">'F'</font><font class="kw">, array(</font>255<font class="kw">, </font>200<font class="kw">, </font>200<font class="kw">));<br></font>$pdf<font class="kw">-&gt;</font>RegularPolygon<font class="kw">(</font>125<font class="kw">, </font>190<font class="kw">, </font>15<font class="kw">, </font>4<font class="kw">, </font>30<font class="kw">, </font>1<font class="kw">, </font>null<font class="kw">, array(</font><font class="str">'all' </font><font class="kw">=&gt; </font>$style5<font class="kw">), </font>null<font class="kw">, </font>null<font class="kw">, </font>$style6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>RegularPolygon<font class="kw">(</font>160<font class="kw">, </font>190<font class="kw">, </font>15<font class="kw">, </font>10<font class="kw">);<br><br></font><font class="cmt">// Star polygon<br></font>$pdf<font class="kw">-&gt;</font>Text<font class="kw">(</font>5<font class="kw">, </font>212<font class="kw">, </font><font class="str">'Star polygon examples'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetLineStyle<font class="kw">(</font>$style5<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>StarPolygon<font class="kw">(</font>20<font class="kw">, </font>230<font class="kw">, </font>15<font class="kw">, </font>20<font class="kw">, </font>3<font class="kw">, </font>0<font class="kw">, </font>1<font class="kw">, </font><font class="str">'F'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>StarPolygon<font class="kw">(</font>55<font class="kw">, </font>230<font class="kw">, </font>15<font class="kw">, </font>12<font class="kw">, </font>5<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>StarPolygon<font class="kw">(</font>55<font class="kw">, </font>230<font class="kw">, </font>7<font class="kw">, </font>12<font class="kw">, </font>5<font class="kw">, </font>45<font class="kw">, </font>0<font class="kw">, </font><font class="str">'DF'</font><font class="kw">, array(</font>$style6<font class="kw">, </font>0<font class="kw">, </font>$style7<font class="kw">, </font>0<font class="kw">, </font>$style7<font class="kw">, </font>$style7<font class="kw">, </font>$style6<font class="kw">));<br></font>$pdf<font class="kw">-&gt;</font>StarPolygon<font class="kw">(</font>90<font class="kw">, </font>230<font class="kw">, </font>15<font class="kw">, </font>20<font class="kw">, </font>6<font class="kw">, </font>0<font class="kw">, </font>1<font class="kw">, </font><font class="str">'DF'</font><font class="kw">, array(</font><font class="str">'all' </font><font class="kw">=&gt; </font>$style5<font class="kw">), array(</font>220<font class="kw">, </font>220<font class="kw">, </font>200<font class="kw">), </font><font class="str">'F'</font><font class="kw">, array(</font>255<font class="kw">, </font>200<font class="kw">, </font>200<font class="kw">));<br></font>$pdf<font class="kw">-&gt;</font>StarPolygon<font class="kw">(</font>125<font class="kw">, </font>230<font class="kw">, </font>15<font class="kw">, </font>5<font class="kw">, </font>2<font class="kw">, </font>30<font class="kw">, </font>1<font class="kw">, </font>null<font class="kw">, array(</font><font class="str">'all' </font><font class="kw">=&gt; </font>$style5<font class="kw">), </font>null<font class="kw">, </font>null<font class="kw">, </font>$style6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>StarPolygon<font class="kw">(</font>160<font class="kw">, </font>230<font class="kw">, </font>15<font class="kw">, </font>10<font class="kw">, </font>3<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>StarPolygon<font class="kw">(</font>160<font class="kw">, </font>230<font class="kw">, </font>7<font class="kw">, </font>50<font class="kw">, </font>26<font class="kw">);<br><br></font><font class="cmt">// Rounded rectangle<br></font>$pdf<font class="kw">-&gt;</font>Text<font class="kw">(</font>5<font class="kw">, </font>252<font class="kw">, </font><font class="str">'Rounded rectangle examples'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>SetLineStyle<font class="kw">(array(</font><font class="str">'width' </font><font class="kw">=&gt; </font>0.5<font class="kw">, </font><font class="str">'cap' </font><font class="kw">=&gt; </font><font class="str">'butt'</font><font class="kw">, </font><font class="str">'join' </font><font class="kw">=&gt; </font><font class="str">'miter'</font><font class="kw">, </font><font class="str">'dash' </font><font class="kw">=&gt; </font>0<font class="kw">, </font><font class="str">'color' </font><font class="kw">=&gt; array(</font>0<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">)));<br></font>$pdf<font class="kw">-&gt;</font>RoundedRect<font class="kw">(</font>5<font class="kw">, </font>255<font class="kw">, </font>40<font class="kw">, </font>30<font class="kw">, </font>3.50<font class="kw">, </font><font class="str">'1111'</font><font class="kw">, </font><font class="str">'DF'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>RoundedRect<font class="kw">(</font>50<font class="kw">, </font>255<font class="kw">, </font>40<font class="kw">, </font>30<font class="kw">, </font>6.50<font class="kw">, </font><font class="str">'1000'</font><font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>RoundedRect<font class="kw">(</font>95<font class="kw">, </font>255<font class="kw">, </font>40<font class="kw">, </font>30<font class="kw">, </font>10.0<font class="kw">, </font><font class="str">'1111'</font><font class="kw">, </font>null<font class="kw">, </font>$style6<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>RoundedRect<font class="kw">(</font>140<font class="kw">, </font>255<font class="kw">, </font>40<font class="kw">, </font>30<font class="kw">, </font>8.0<font class="kw">, </font><font class="str">'0101'</font><font class="kw">, </font><font class="str">'DF'</font><font class="kw">, </font>$style6<font class="kw">, array(</font>200<font class="kw">, </font>200<font class="kw">, </font>200<font class="kw">));<br><br></font>$pdf<font class="kw">-&gt;</font>Output<font class="kw">();<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>
<BR>
View the result <A HREF="ex69.pdf" TARGET="_blank">here</A>.
<H4 CLASS="st">Download</H4><A HREF="script69.zip">ZIP</A> | <A HREF="script69.tgz">TGZ</A>
</BODY>
</HTML>
