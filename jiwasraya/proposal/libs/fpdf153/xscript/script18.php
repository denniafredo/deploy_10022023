<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Memory optimisation</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY ONLOAD="if(window.focus) window.focus()">
<H2>Memory optimisation</H2>
<H4 CLASS="st">Informations</H4>Author: <A HREF="&#109;ailto:nod&#64;sqlopus.org?subject=Memory%20optimisation">Philip Clarke</A><BR>License: Freeware
<H4 CLASS="st">Description</H4>Normally FPDF compresses the entire PDF in the _putpages() method at the very end of PDF
generation, this can lead to a large uncompressed PDF being stored in memory.<BR>
<BR>
This modification compresses each finished page in _endpage() reducing the overall memory
usage when generating large PDFs.<BR>
<BR>
To test with minimal external influences, use a file such as the provided test.php. In one
terminal window as root run top like so:<BR>
<BR>
<TT>~&gt; top -q | grep php</TT><BR>
<BR>
then run the script from the command line, using:<BR>
<BR>
<TT>~&gt; php -q test.php &gt; with_opt.pdf</TT><BR>
<BR>
The "top" terminal window will scroll detailing memory usage of php (press q to exit).
Then altering test.php to use the base class and running:<BR>
<BR>
<TT>~&gt; php -q test.php &gt; no_opt.pdf</TT><BR>
<BR>
will show the original behaviour giving identical sized PDF files (no_opt.pdf and
with_opt.pdf). On a 600 MHz dual processor typical results were that the optimised php
code uses a maximum of 7.3 Megabytes wheareas the original uses 15 M. Both tests
typically take 2 minutes 15 secs. Over very large reports (2000 pages +) the optimised
version is very slightly slower by a few seconds.
<H4 CLASS="st">Source</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'fpdf.php'</font><font class="kw">);<br><br>class&nbsp;</font>PDF_Opt&nbsp;<font class="kw">extends&nbsp;</font>FPDF<br><font class="kw">{<br><br>function&nbsp;</font>_putpages<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$nb<font class="kw">=</font>$<font class="kw">this-&gt;</font>page<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;if(!empty(</font>$<font class="kw">this-&gt;</font>AliasNbPages<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Replace number of pages<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">for(</font>$n<font class="kw">=</font>1<font class="kw">;</font>$n<font class="kw">&lt;=</font>$nb<font class="kw">;</font>$n<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>pages<font class="kw">[</font>$n<font class="kw">]=(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">)&nbsp;?&nbsp;</font>gzcompress<font class="kw">(</font>str_replace<font class="kw">(</font>$<font class="kw">this-&gt;</font>AliasNbPages<font class="kw">,</font>$nb<font class="kw">,</font>gzuncompress<font class="kw">(</font>$<font class="kw">this-&gt;</font>pages<font class="kw">[</font>$n<font class="kw">])))&nbsp;:&nbsp;</font>str_replace<font class="kw">(</font>$<font class="kw">this-&gt;</font>AliasNbPages<font class="kw">,</font>$nb<font class="kw">,</font>$<font class="kw">this-&gt;</font>pages<font class="kw">[</font>$n<font class="kw">])&nbsp;;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$<font class="kw">this-&gt;</font>DefOrientation<font class="kw">==</font><font class="str">'P'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$wPt<font class="kw">=</font>$<font class="kw">this-&gt;</font>fwPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$hPt<font class="kw">=</font>$<font class="kw">this-&gt;</font>fhPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$wPt<font class="kw">=</font>$<font class="kw">this-&gt;</font>fhPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$hPt<font class="kw">=</font>$<font class="kw">this-&gt;</font>fwPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$filter<font class="kw">=(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">)&nbsp;?&nbsp;</font><font class="str">'/Filter /FlateDecode '&nbsp;</font><font class="kw">:&nbsp;</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$n<font class="kw">=</font>1<font class="kw">;</font>$n<font class="kw">&lt;=</font>$nb<font class="kw">;</font>$n<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Page<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;/Type /Page'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Parent 1 0 R'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$<font class="kw">this-&gt;</font>OrientationChanges<font class="kw">[</font>$n<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'/MediaBox [0 0 %.2f %.2f]'</font><font class="kw">,</font>$hPt<font class="kw">,</font>$wPt<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Resources 2 0 R'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$<font class="kw">this-&gt;</font>PageLinks<font class="kw">[</font>$n<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Links<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$annots<font class="kw">=</font><font class="str">'/Annots ['</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach(</font>$<font class="kw">this-&gt;</font>PageLinks<font class="kw">[</font>$n<font class="kw">]&nbsp;as&nbsp;</font>$pl<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$rect<font class="kw">=</font>sprintf<font class="kw">(</font><font class="str">'%.2f %.2f %.2f %.2f'</font><font class="kw">,</font>$pl<font class="kw">[</font>0<font class="kw">],</font>$pl<font class="kw">[</font>1<font class="kw">],</font>$pl<font class="kw">[</font>0<font class="kw">]+</font>$pl<font class="kw">[</font>2<font class="kw">],</font>$pl<font class="kw">[</font>1<font class="kw">]-</font>$pl<font class="kw">[</font>3<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$annots<font class="kw">.=</font><font class="str">'&lt;&lt;/Type /Annot /Subtype /Link /Rect ['</font><font class="kw">.</font>$rect<font class="kw">.</font><font class="str">'] /Border [0 0 0] '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>is_string<font class="kw">(</font>$pl<font class="kw">[</font>4<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$annots<font class="kw">.=</font><font class="str">'/A &lt;&lt;/S /URI /URI '</font><font class="kw">.</font>$<font class="kw">this-&gt;</font>_textstring<font class="kw">(</font>$pl<font class="kw">[</font>4<font class="kw">]).</font><font class="str">'&gt;&gt;&gt;&gt;'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$l<font class="kw">=</font>$<font class="kw">this-&gt;</font>links<font class="kw">[</font>$pl<font class="kw">[</font>4<font class="kw">]];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=isset(</font>$<font class="kw">this-&gt;</font>OrientationChanges<font class="kw">[</font>$l<font class="kw">[</font>0<font class="kw">]])&nbsp;?&nbsp;</font>$wPt&nbsp;<font class="kw">:&nbsp;</font>$hPt<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$annots<font class="kw">.=</font>sprintf<font class="kw">(</font><font class="str">'/Dest [%d 0 R /XYZ 0 %.2f null]&gt;&gt;'</font><font class="kw">,</font>1<font class="kw">+</font>2<font class="kw">*</font>$l<font class="kw">[</font>0<font class="kw">],</font>$h<font class="kw">-</font>$l<font class="kw">[</font>1<font class="kw">]*</font>$<font class="kw">this-&gt;</font>k<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$annots<font class="kw">.</font><font class="str">']'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Contents '</font><font class="kw">.(</font>$<font class="kw">this-&gt;</font>n<font class="kw">+</font>1<font class="kw">).</font><font class="str">' 0 R&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Page content<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;'</font><font class="kw">.</font>$filter<font class="kw">.</font><font class="str">'/Length '</font><font class="kw">.</font>strlen<font class="kw">(</font>$<font class="kw">this-&gt;</font>pages<font class="kw">[</font>$n<font class="kw">]).</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putstream<font class="kw">(</font>$<font class="kw">this-&gt;</font>pages<font class="kw">[</font>$n<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Pages root<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>offsets<font class="kw">[</font>1<font class="kw">]=</font>strlen<font class="kw">(</font>$<font class="kw">this-&gt;</font>buffer<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'1 0 obj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;/Type /Pages'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$kids<font class="kw">=</font><font class="str">'/Kids ['</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$i<font class="kw">=</font>0<font class="kw">;</font>$i<font class="kw">&lt;</font>$nb<font class="kw">;</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$kids<font class="kw">.=(</font>3<font class="kw">+</font>2<font class="kw">*</font>$i<font class="kw">).</font><font class="str">' 0 R '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$kids<font class="kw">.</font><font class="str">']'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Count '</font><font class="kw">.</font>$nb<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'/MediaBox [0 0 %.2f %.2f]'</font><font class="kw">,</font>$wPt<font class="kw">,</font>$hPt<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>}<br><br>function&nbsp;</font>_endpage<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//End of page contents<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>pages<font class="kw">[</font>$<font class="kw">this-&gt;</font>page<font class="kw">]&nbsp;=&nbsp;(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">)&nbsp;?&nbsp;</font>gzcompress<font class="kw">(</font>$<font class="kw">this-&gt;</font>pages<font class="kw">[</font>$<font class="kw">this-&gt;</font>page<font class="kw">])&nbsp;:&nbsp;</font>$<font class="kw">this-&gt;</font>pages<font class="kw">[</font>$<font class="kw">this-&gt;</font>page<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>state<font class="kw">=</font>1<font class="kw">;<br>}<br><br>}<br><br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Example</H4>Here is an example of test script.<BR>
<BR>
<TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br>ini_set<font class="kw">(</font><font class="str">'memory_limit'</font><font class="kw">,</font><font class="str">'100M'</font><font class="kw">);<br></font>ini_set<font class="kw">(</font><font class="str">'max_execution_time'</font><font class="kw">,</font>0<font class="kw">);<br><br></font>define<font class="kw">(</font><font class="str">'FPDF_FONTPATH'</font><font class="kw">,</font><font class="str">'font/'</font><font class="kw">);<br>require(</font><font class="str">'memory_opt.php'</font><font class="kw">);<br><br></font><font class="cmt">// for testing purposes only stops a bug where command line php<br>// believes that headers have already been sent<br><br></font><font class="kw">class&nbsp;</font>TESTING_PDF&nbsp;<font class="kw">extends&nbsp;</font>PDF_Opt<br><font class="kw">{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;</font>Output<font class="kw">()<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</font>$<font class="kw">this-&gt;</font>buffer<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br><br></font>$pdf&nbsp;<font class="kw">=&nbsp;new&nbsp;</font>TESTING_PDF<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>Open<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">(</font><font class="str">'Arial'</font><font class="kw">,</font><font class="str">''</font><font class="kw">,</font>9<font class="kw">);<br></font><font class="cmt">// generate a constant amount of text for testing<br></font><font class="kw">for(</font>$i<font class="kw">=</font>1<font class="kw">;&nbsp;</font>$i<font class="kw">&lt;</font>200<font class="kw">;&nbsp;</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$txt&nbsp;<font class="kw">.=&nbsp;</font><font class="str">'ashfsd kjsahkasjh akjhdsfjkh djshf sjkh '&nbsp;</font><font class="kw">;<br>for(</font>$i<font class="kw">=</font>1<font class="kw">;&nbsp;</font>$i<font class="kw">&lt;</font>1000<font class="kw">;&nbsp;</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$pdf<font class="kw">-&gt;</font>Write<font class="kw">(</font>9<font class="kw">,</font>$txt<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>Close<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>Output<font class="kw">();<br><br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Download</H4><A HREF="script18.zip">ZIP</A> | <A HREF="script18.tgz">TGZ</A>
</BODY>
</HTML>
