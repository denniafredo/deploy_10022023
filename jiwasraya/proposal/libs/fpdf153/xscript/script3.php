<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Table with MultiCells</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY ONLOAD="if(window.focus) window.focus()">
<H2>Table with MultiCells</H2>
<H4 CLASS="st">Informations</H4>Author: <SCRIPT TYPE="text/javascript">document.write('<A H'+'REF="m'+'ailto:oliver'+'&#'+'64;'+'fpdf.org?subject=Table%20with%20MultiCells">');</SCRIPT>Olivier<SCRIPT TYPE="text/javascript">document.write('<\/A>');</SCRIPT><BR>License: Freeware
<H4 CLASS="st">Description</H4>The goal of this script is to show how to build a table from MultiCells.<BR>
As MultiCells go to the next line after being output, the base idea consists in saving the
current position, printing the MultiCell and resetting the position to its right.<BR>
There is a difficulty, however, if the table is too long: page breaks. Before outputting a
row, it is necessary to know whether it will cause a break or not. If it does overflow, a
manual page break must be done first.<BR>
To do so, the height of the row must be known in advance; it is the maximum of the heights of
the MultiCells it is made up of. To know the height of a MultiCell, the NbLines() method is used:
it returns the number of lines a MultiCell will occupy.
<H4 CLASS="st">Source</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'fpdf.php'</font><font class="kw">);<br><br>class </font>PDF_MC_Table <font class="kw">extends </font>FPDF<br><font class="kw">{<br>var </font>$widths<font class="kw">;<br>var </font>$aligns<font class="kw">;<br><br>function </font>SetWidths<font class="kw">(</font>$w<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Set the array of column widths<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>widths<font class="kw">=</font>$w<font class="kw">;<br>}<br><br>function </font>SetAligns<font class="kw">(</font>$a<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Set the array of column alignments<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>aligns<font class="kw">=</font>$a<font class="kw">;<br>}<br><br>function </font>Row<font class="kw">(</font>$data<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Calculate the height of the row<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$nb<font class="kw">=</font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$i<font class="kw">=</font>0<font class="kw">;</font>$i<font class="kw">&lt;</font>count<font class="kw">(</font>$data<font class="kw">);</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$nb<font class="kw">=</font>max<font class="kw">(</font>$nb<font class="kw">,</font>$<font class="kw">this-&gt;</font>NbLines<font class="kw">(</font>$<font class="kw">this-&gt;</font>widths<font class="kw">[</font>$i<font class="kw">],</font>$data<font class="kw">[</font>$i<font class="kw">]));<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=</font>5<font class="kw">*</font>$nb<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Issue a page break first if needed<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>CheckPageBreak<font class="kw">(</font>$h<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Draw the cells of the row<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">for(</font>$i<font class="kw">=</font>0<font class="kw">;</font>$i<font class="kw">&lt;</font>count<font class="kw">(</font>$data<font class="kw">);</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font>$<font class="kw">this-&gt;</font>widths<font class="kw">[</font>$i<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$a<font class="kw">=isset(</font>$<font class="kw">this-&gt;</font>aligns<font class="kw">[</font>$i<font class="kw">]) ? </font>$<font class="kw">this-&gt;</font>aligns<font class="kw">[</font>$i<font class="kw">] : </font><font class="str">'L'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Save the current position<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$x<font class="kw">=</font>$<font class="kw">this-&gt;</font>GetX<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$y<font class="kw">=</font>$<font class="kw">this-&gt;</font>GetY<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Draw the border<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Rect<font class="kw">(</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">,</font>$h<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Print the text<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>MultiCell<font class="kw">(</font>$w<font class="kw">,</font>5<font class="kw">,</font>$data<font class="kw">[</font>$i<font class="kw">],</font>0<font class="kw">,</font>$a<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Put the position to the right of the cell<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>SetXY<font class="kw">(</font>$x<font class="kw">+</font>$w<font class="kw">,</font>$y<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Go to the next line<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Ln<font class="kw">(</font>$h<font class="kw">);<br>}<br><br>function </font>CheckPageBreak<font class="kw">(</font>$h<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//If the height h would cause an overflow, add a new page immediately<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>$<font class="kw">this-&gt;</font>GetY<font class="kw">()+</font>$h<font class="kw">&gt;</font>$<font class="kw">this-&gt;</font>PageBreakTrigger<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>AddPage<font class="kw">(</font>$<font class="kw">this-&gt;</font>CurOrientation<font class="kw">);<br>}<br><br>function </font>NbLines<font class="kw">(</font>$w<font class="kw">,</font>$txt<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Computes the number of lines a MultiCell of width w will take<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$cw<font class="kw">=&amp;</font>$<font class="kw">this-&gt;</font>CurrentFont<font class="kw">[</font><font class="str">'cw'</font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$w<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font>$<font class="kw">this-&gt;</font>w<font class="kw">-</font>$<font class="kw">this-&gt;</font>rMargin<font class="kw">-</font>$<font class="kw">this-&gt;</font>x<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$wmax<font class="kw">=(</font>$w<font class="kw">-</font>2<font class="kw">*</font>$<font class="kw">this-&gt;</font>cMargin<font class="kw">)*</font>1000<font class="kw">/</font>$<font class="kw">this-&gt;</font>FontSize<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$s<font class="kw">=</font>str_replace<font class="kw">(</font><font class="str">"\r"</font><font class="kw">,</font><font class="str">''</font><font class="kw">,</font>$txt<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$nb<font class="kw">=</font>strlen<font class="kw">(</font>$s<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$nb<font class="kw">&gt;</font>0 <font class="kw">and </font>$s<font class="kw">[</font>$nb<font class="kw">-</font>1<font class="kw">]==</font><font class="str">"\n"</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$nb<font class="kw">--;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$sep<font class="kw">=-</font>1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$i<font class="kw">=</font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$j<font class="kw">=</font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$l<font class="kw">=</font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$nl<font class="kw">=</font>1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;while(</font>$i<font class="kw">&lt;</font>$nb<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$c<font class="kw">=</font>$s<font class="kw">[</font>$i<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$c<font class="kw">==</font><font class="str">"\n"</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i<font class="kw">++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$sep<font class="kw">=-</font>1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$j<font class="kw">=</font>$i<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$l<font class="kw">=</font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$nl<font class="kw">++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$c<font class="kw">==</font><font class="str">' '</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$sep<font class="kw">=</font>$i<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$l<font class="kw">+=</font>$cw<font class="kw">[</font>$c<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$l<font class="kw">&gt;</font>$wmax<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$sep<font class="kw">==-</font>1<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$i<font class="kw">==</font>$j<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i<font class="kw">++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i<font class="kw">=</font>$sep<font class="kw">+</font>1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$sep<font class="kw">=-</font>1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$j<font class="kw">=</font>$i<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$l<font class="kw">=</font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$nl<font class="kw">++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$i<font class="kw">++;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;return </font>$nl<font class="kw">;<br>}<br>}<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Example</H4>Here's an example of multi-page table with random content:<BR>
<BR>
<TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br>define<font class="kw">(</font><font class="str">'FPDF_FONTPATH'</font><font class="kw">,</font><font class="str">'font/'</font><font class="kw">);<br>require(</font><font class="str">'mc_table.php'</font><font class="kw">);<br><br>function </font>GenerateWord<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Get a random word<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$nb<font class="kw">=</font>rand<font class="kw">(</font>3<font class="kw">,</font>10<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$i<font class="kw">=</font>1<font class="kw">;</font>$i<font class="kw">&lt;=</font>$nb<font class="kw">;</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">.=</font>chr<font class="kw">(</font>rand<font class="kw">(</font>ord<font class="kw">(</font><font class="str">'a'</font><font class="kw">),</font>ord<font class="kw">(</font><font class="str">'z'</font><font class="kw">)));<br>&nbsp;&nbsp;&nbsp;&nbsp;return </font>$w<font class="kw">;<br>}<br><br>function </font>GenerateSentence<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Get a random sentence<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$nb<font class="kw">=</font>rand<font class="kw">(</font>1<font class="kw">,</font>10<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$s<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$i<font class="kw">=</font>1<font class="kw">;</font>$i<font class="kw">&lt;=</font>$nb<font class="kw">;</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$s<font class="kw">.=</font>GenerateWord<font class="kw">().</font><font class="str">' '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;return </font>substr<font class="kw">(</font>$s<font class="kw">,</font>0<font class="kw">,-</font>1<font class="kw">);<br>}<br><br></font>$pdf<font class="kw">=new </font>PDF_MC_Table<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>Open<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">(</font><font class="str">'Arial'</font><font class="kw">,</font><font class="str">''</font><font class="kw">,</font>14<font class="kw">);<br></font><font class="cmt">//Table with 20 rows and 4 columns<br></font>$pdf<font class="kw">-&gt;</font>SetWidths<font class="kw">(array(</font>30<font class="kw">,</font>50<font class="kw">,</font>30<font class="kw">,</font>40<font class="kw">));<br></font>srand<font class="kw">(</font>microtime<font class="kw">()*</font>1000000<font class="kw">);<br>for(</font>$i<font class="kw">=</font>0<font class="kw">;</font>$i<font class="kw">&lt;</font>20<font class="kw">;</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$pdf<font class="kw">-&gt;</font>Row<font class="kw">(array(</font>GenerateSentence<font class="kw">(),</font>GenerateSentence<font class="kw">(),</font>GenerateSentence<font class="kw">(),</font>GenerateSentence<font class="kw">()));<br></font>$pdf<font class="kw">-&gt;</font>Output<font class="kw">();<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>
<BR>
View the result <A HREF="ex3.pdf" TARGET="_blank">here</A>.
<H4 CLASS="st">Download</H4><A HREF="script3.zip">ZIP</A> | <A HREF="script3.tgz">TGZ</A>
</BODY>
</HTML>
