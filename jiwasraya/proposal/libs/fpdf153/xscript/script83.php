<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Alpha channel</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY ONLOAD="if(window.focus) window.focus()">
<H2>Alpha channel</H2>
<H4 CLASS="st">Informations</H4>Author: Valentin Schmidt<BR>License: Freeware
<H4 CLASS="st">Description</H4>This script allows to use images (PNGs or JPGs) with alpha channels. The alpha channel can be supplied either
via a separate PNG image (called a mask) or, for PNGs, an internal alpha channel can be used directly.
For the latter, the GD 2.x extension is required.<BR>
<BR>
The mask must be a gray scale image (not palette-based nor true color). A black pixel means that the corresponding
pixel in the main image is fully transparent; a white pixel means it's opaque. Values in between mean different
degrees of transparency.<BR>
Using a mask has several advantages:<BR>
<BR>
- GD is not required<BR>
- Better quality (full 8-bit alpha channel, whereas GD internally only supports 7-bit alpha channels)<BR>
- Much faster (extraction of embedded alpha channel has to be done pixel-wise)<BR>
<BR>
A new version of Image() is provided:<BR>
<BR>
<TT>Image(<B>string</B> file, <B>float</B> x, <B>float</B> y [, <B>float</B> w [, <B>float</B> h [, <B>string</B> type [, <B>mixed</B> link [, <B>boolean</B> isMask [, <B>int</B> maskImg]]]]]])</TT><BR>
<BR>
The parameters are the same as for the original method, with 2 additional (optional) ones:<BR>
<BR>
<TT><U>isMask</U></TT>: if specified and <TT>true</TT>, the image is used as a mask for another image. In this case,
the parameters x, y, w and h will be ignored and the mask image itself is not visible on
the page.<BR>
<TT><U>maskImg</U></TT>: number of image resource (as returned by previously called Image() with isMask
parameter set to <TT>true</TT>) that will be used as a mask for this image.<BR>
<BR>
This version supports PNGs with internal alpha channel. Alternatively, you can also use this method:<BR>
<BR>
<TT>ImagePngWithAlpha(<B>string</B> file, <B>float</B> x, <B>float</B> y [, <B>float</B> w [, <B>float</B> h [, <B>mixed</B> link]]])</TT><BR>
<BR>
The parameters are the same as for the original method, but without the <TT>type</TT> parameter.<BR>
<BR>
<B>Note:</B> alpha channel requires at least Acrobat Reader 5.
<H4 CLASS="st">Source</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'fpdf.php'</font><font class="kw">);<br><br>class </font>PDF_ImageAlpha <font class="kw">extends </font>FPDF<br><font class="kw">{<br></font><font class="cmt">//Private properties<br></font><font class="kw">var </font>$tmpFiles <font class="kw">= array(); <br><br></font><font class="cmt">/*******************************************************************************<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Public methods&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br>*******************************************************************************/<br></font><font class="kw">function </font>Image<font class="kw">(</font>$file<font class="kw">,</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">=</font>0<font class="kw">,</font>$h<font class="kw">=</font>0<font class="kw">,</font>$type<font class="kw">=</font><font class="str">''</font><font class="kw">,</font>$link<font class="kw">=</font><font class="str">''</font><font class="kw">, </font>$isMask<font class="kw">=</font>false<font class="kw">, </font>$maskImg<font class="kw">=</font>0<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Put an image on the page<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(!isset(</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$file<font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//First use of image, get info<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>$type<font class="kw">==</font><font class="str">''</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pos<font class="kw">=</font>strrpos<font class="kw">(</font>$file<font class="kw">,</font><font class="str">'.'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!</font>$pos<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Image file has no extension and no type was specified: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$type<font class="kw">=</font>substr<font class="kw">(</font>$file<font class="kw">,</font>$pos<font class="kw">+</font>1<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$type<font class="kw">=</font>strtolower<font class="kw">(</font>$type<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$mqr<font class="kw">=</font>get_magic_quotes_runtime<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>set_magic_quotes_runtime<font class="kw">(</font>0<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$type<font class="kw">==</font><font class="str">'jpg' </font><font class="kw">|| </font>$type<font class="kw">==</font><font class="str">'jpeg'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">=</font>$<font class="kw">this-&gt;</font>_parsejpg<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$type<font class="kw">==</font><font class="str">'png'</font><font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">=</font>$<font class="kw">this-&gt;</font>_parsepng<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$info<font class="kw">==</font><font class="str">'alpha'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>$<font class="kw">this-&gt;</font>ImagePngWithAlpha<font class="kw">(</font>$file<font class="kw">,</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">,</font>$h<font class="kw">,</font>$link<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Allow for additional formats<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$mtd<font class="kw">=</font><font class="str">'_parse'</font><font class="kw">.</font>$type<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!</font>method_exists<font class="kw">(</font>$<font class="kw">this,</font>$mtd<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Unsupported image type: '</font><font class="kw">.</font>$type<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">=</font>$<font class="kw">this-&gt;</font>$mtd<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>set_magic_quotes_runtime<font class="kw">(</font>$mqr<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$isMask<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>in_array<font class="kw">(</font>$file<font class="kw">,</font>$<font class="kw">this-&gt;</font>tmpFiles<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]=</font><font class="str">'DeviceGray'</font><font class="kw">; </font><font class="cmt">//hack necessary as GD can't produce gray scale images<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]!=</font><font class="str">'DeviceGray'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Mask must be a gray scale image'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$<font class="kw">this-&gt;</font>PDFVersion<font class="kw">&lt;</font><font class="str">'1.4'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>PDFVersion<font class="kw">=</font><font class="str">'1.4'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">[</font><font class="str">'i'</font><font class="kw">]=</font>count<font class="kw">(</font>$<font class="kw">this-&gt;</font>images<font class="kw">)+</font>1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$maskImg<font class="kw">&gt;</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">[</font><font class="str">'masked'</font><font class="kw">] = </font>$maskImg<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$file<font class="kw">]=</font>$info<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$info<font class="kw">=</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$file<font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Automatic width and height calculation if needed<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>$w<font class="kw">==</font>0 <font class="kw">&amp;&amp; </font>$h<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Put image at 72 dpi<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font>$info<font class="kw">[</font><font class="str">'w'</font><font class="kw">]/</font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=</font>$info<font class="kw">[</font><font class="str">'h'</font><font class="kw">]/</font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$w<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font>$h<font class="kw">*</font>$info<font class="kw">[</font><font class="str">'w'</font><font class="kw">]/</font>$info<font class="kw">[</font><font class="str">'h'</font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$h<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=</font>$w<font class="kw">*</font>$info<font class="kw">[</font><font class="str">'h'</font><font class="kw">]/</font>$info<font class="kw">[</font><font class="str">'w'</font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;if(!</font>$isMask<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'q %.2f 0 0 %.2f %.2f %.2f cm /I%d Do Q'</font><font class="kw">,</font>$w<font class="kw">*</font>$<font class="kw">this-&gt;</font>k<font class="kw">,</font>$h<font class="kw">*</font>$<font class="kw">this-&gt;</font>k<font class="kw">,</font>$x<font class="kw">*</font>$<font class="kw">this-&gt;</font>k<font class="kw">,(</font>$<font class="kw">this-&gt;</font>h<font class="kw">-(</font>$y<font class="kw">+</font>$h<font class="kw">))*</font>$<font class="kw">this-&gt;</font>k<font class="kw">,</font>$info<font class="kw">[</font><font class="str">'i'</font><font class="kw">]));<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$link<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Link<font class="kw">(</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">,</font>$h<font class="kw">,</font>$link<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;return </font>$info<font class="kw">[</font><font class="str">'i'</font><font class="kw">];<br>}<br><br></font><font class="cmt">// needs GD 2.x extension<br>// pixel-wise operation, not very fast<br></font><font class="kw">function </font>ImagePngWithAlpha<font class="kw">(</font>$file<font class="kw">,</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">=</font>0<font class="kw">,</font>$h<font class="kw">=</font>0<font class="kw">,</font>$link<font class="kw">=</font><font class="str">''</font><font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$tmp_alpha <font class="kw">= </font>tempnam<font class="kw">(</font><font class="str">'.'</font><font class="kw">, </font><font class="str">'mska'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>tmpFiles<font class="kw">[] = </font>$tmp_alpha<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$tmp_plain <font class="kw">= </font>tempnam<font class="kw">(</font><font class="str">'.'</font><font class="kw">, </font><font class="str">'mskp'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>tmpFiles<font class="kw">[] = </font>$tmp_plain<font class="kw">;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;list(</font>$wpx<font class="kw">, </font>$hpx<font class="kw">) = </font>getimagesize<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$img <font class="kw">= </font>imagecreatefrompng<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$alpha_img <font class="kw">= </font>imagecreate<font class="kw">( </font>$wpx<font class="kw">, </font>$hpx <font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// generate gray scale pallete<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">for(</font>$c<font class="kw">=</font>0<font class="kw">;</font>$c<font class="kw">&lt;</font>256<font class="kw">;</font>$c<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>ImageColorAllocate<font class="kw">(</font>$alpha_img<font class="kw">, </font>$c<font class="kw">, </font>$c<font class="kw">, </font>$c<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// extract alpha channel<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$xpx<font class="kw">=</font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;while (</font>$xpx<font class="kw">&lt;</font>$wpx<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$ypx <font class="kw">= </font>0<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (</font>$ypx<font class="kw">&lt;</font>$hpx<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$color_index <font class="kw">= </font>imagecolorat<font class="kw">(</font>$img<font class="kw">, </font>$xpx<font class="kw">, </font>$ypx<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$col <font class="kw">= </font>imagecolorsforindex<font class="kw">(</font>$img<font class="kw">, </font>$color_index<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>imagesetpixel<font class="kw">(</font>$alpha_img<font class="kw">, </font>$xpx<font class="kw">, </font>$ypx<font class="kw">, </font>$<font class="kw">this-&gt;</font>_gamma<font class="kw">( (</font>127<font class="kw">-</font>$col<font class="kw">[</font><font class="str">'alpha'</font><font class="kw">])*</font>255<font class="kw">/</font>127<font class="kw">) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++</font>$ypx<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++</font>$xpx<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font>imagepng<font class="kw">(</font>$alpha_img<font class="kw">, </font>$tmp_alpha<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>imagedestroy<font class="kw">(</font>$alpha_img<font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// extract image without alpha channel<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$plain_img <font class="kw">= </font>imagecreatetruecolor <font class="kw">( </font>$wpx<font class="kw">, </font>$hpx <font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>imagecopy<font class="kw">(</font>$plain_img<font class="kw">, </font>$img<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font>0<font class="kw">, </font>$wpx<font class="kw">, </font>$hpx <font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>imagepng<font class="kw">(</font>$plain_img<font class="kw">, </font>$tmp_plain<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>imagedestroy<font class="kw">(</font>$plain_img<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//first embed mask image (w, h, x, will be ignored)<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$maskImg <font class="kw">= </font>$<font class="kw">this-&gt;</font>Image<font class="kw">(</font>$tmp_alpha<font class="kw">, </font>0<font class="kw">,</font>0<font class="kw">,</font>0<font class="kw">,</font>0<font class="kw">, </font><font class="str">'PNG'</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>true<font class="kw">); <br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//embed image, masked with previously embedded mask<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Image<font class="kw">(</font>$tmp_plain<font class="kw">,</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">,</font>$h<font class="kw">,</font><font class="str">'PNG'</font><font class="kw">,</font>$link<font class="kw">, </font>false<font class="kw">, </font>$maskImg<font class="kw">);<br>}<br><br>function </font>Close<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">parent::</font>Close<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// clean up tmp files<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">foreach(</font>$<font class="kw">this-&gt;</font>tmpFiles <font class="kw">as </font>$tmp<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@</font>unlink<font class="kw">(</font>$tmp<font class="kw">);<br>}<br><br></font><font class="cmt">/*******************************************************************************<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Private methods&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br>*******************************************************************************/<br></font><font class="kw">function </font>_putimages<font class="kw">()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$filter<font class="kw">=(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">) ? </font><font class="str">'/Filter /FlateDecode ' </font><font class="kw">: </font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>reset<font class="kw">(</font>$<font class="kw">this-&gt;</font>images<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;while(list(</font>$file<font class="kw">,</font>$info<font class="kw">)=</font>each<font class="kw">(</font>$<font class="kw">this-&gt;</font>images<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$file<font class="kw">][</font><font class="str">'n'</font><font class="kw">]=</font>$<font class="kw">this-&gt;</font>n<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;/Type /XObject'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Subtype /Image'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Width '</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'w'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Height '</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'h'</font><font class="kw">]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$info<font class="kw">[</font><font class="str">'masked'</font><font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/SMask '</font><font class="kw">.(</font>$<font class="kw">this-&gt;</font>n<font class="kw">-</font>1<font class="kw">).</font><font class="str">' 0 R'</font><font class="kw">);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]==</font><font class="str">'Indexed'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/ColorSpace [/Indexed /DeviceRGB '</font><font class="kw">.(</font>strlen<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'pal'</font><font class="kw">])/</font>3<font class="kw">-</font>1<font class="kw">).</font><font class="str">' '</font><font class="kw">.(</font>$<font class="kw">this-&gt;</font>n<font class="kw">+</font>1<font class="kw">).</font><font class="str">' 0 R]'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/ColorSpace /'</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]==</font><font class="str">'DeviceCMYK'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Decode [1 0 1 0 1 0 1 0]'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/BitsPerComponent '</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'bpc'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$info<font class="kw">[</font><font class="str">'f'</font><font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Filter /'</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'f'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$info<font class="kw">[</font><font class="str">'parms'</font><font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'parms'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isset(</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">]) &amp;&amp; </font>is_array<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">]))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(</font>$i<font class="kw">=</font>0<font class="kw">;</font>$i<font class="kw">&lt;</font>count<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">]);</font>$i<font class="kw">++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">.=</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">][</font>$i<font class="kw">].</font><font class="str">' '</font><font class="kw">.</font>$info<font class="kw">[</font><font class="str">'trns'</font><font class="kw">][</font>$i<font class="kw">].</font><font class="str">' '</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Mask ['</font><font class="kw">.</font>$trns<font class="kw">.</font><font class="str">']'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'/Length '</font><font class="kw">.</font>strlen<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'data'</font><font class="kw">]).</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putstream<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'data'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset(</font>$<font class="kw">this-&gt;</font>images<font class="kw">[</font>$file<font class="kw">][</font><font class="str">'data'</font><font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Palette<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>$info<font class="kw">[</font><font class="str">'cs'</font><font class="kw">]==</font><font class="str">'Indexed'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_newobj<font class="kw">();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pal<font class="kw">=(</font>$<font class="kw">this-&gt;</font>compress<font class="kw">) ? </font>gzcompress<font class="kw">(</font>$info<font class="kw">[</font><font class="str">'pal'</font><font class="kw">]) : </font>$info<font class="kw">[</font><font class="str">'pal'</font><font class="kw">];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'&lt;&lt;'</font><font class="kw">.</font>$filter<font class="kw">.</font><font class="str">'/Length '</font><font class="kw">.</font>strlen<font class="kw">(</font>$pal<font class="kw">).</font><font class="str">'&gt;&gt;'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_putstream<font class="kw">(</font>$pal<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'endobj'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br></font><font class="cmt">// GD seems to use a different gamma, this method is used to correct it again<br></font><font class="kw">function </font>_gamma<font class="kw">(</font>$v<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;return </font>pow <font class="kw">(</font>$v<font class="kw">/</font>255<font class="kw">, </font>2.2<font class="kw">) * </font>255<font class="kw">;<br>}<br><br></font><font class="cmt">// this method overwriing the original version is only needed to make the Image method support PNGs with alpha channels.<br>// if you only use the ImagePngWithAlpha method for such PNGs, you can remove it from this script.<br></font><font class="kw">function </font>_parsepng<font class="kw">(</font>$file<font class="kw">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Extract info from a PNG file<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$f<font class="kw">=</font>fopen<font class="kw">(</font>$file<font class="kw">,</font><font class="str">'rb'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if(!</font>$f<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Can\'t open image file: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Check signature<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if(</font>fread<font class="kw">(</font>$f<font class="kw">,</font>8<font class="kw">)!=</font>chr<font class="kw">(</font>137<font class="kw">).</font><font class="str">'PNG'</font><font class="kw">.</font>chr<font class="kw">(</font>13<font class="kw">).</font>chr<font class="kw">(</font>10<font class="kw">).</font>chr<font class="kw">(</font>26<font class="kw">).</font>chr<font class="kw">(</font>10<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Not a PNG file: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read header chunk<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>fread<font class="kw">(</font>$f<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>fread<font class="kw">(</font>$f<font class="kw">,</font>4<font class="kw">)!=</font><font class="str">'IHDR'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Incorrect PNG file: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$w<font class="kw">=</font>$<font class="kw">this-&gt;</font>_freadint<font class="kw">(</font>$f<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$h<font class="kw">=</font>$<font class="kw">this-&gt;</font>_freadint<font class="kw">(</font>$f<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$bpc<font class="kw">=</font>ord<font class="kw">(</font>fread<font class="kw">(</font>$f<font class="kw">,</font>1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$bpc<font class="kw">&gt;</font>8<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'16-bit depth not supported: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$ct<font class="kw">=</font>ord<font class="kw">(</font>fread<font class="kw">(</font>$f<font class="kw">,</font>1<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$ct<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$colspace<font class="kw">=</font><font class="str">'DeviceGray'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$ct<font class="kw">==</font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$colspace<font class="kw">=</font><font class="str">'DeviceRGB'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$ct<font class="kw">==</font>3<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$colspace<font class="kw">=</font><font class="str">'Indexed'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;else {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>fclose<font class="kw">(</font>$f<font class="kw">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// the only changes are <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">return </font><font class="str">'alpha'</font><font class="kw">;&nbsp;&nbsp;</font><font class="cmt">// made in those 2 lines<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">}<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>ord<font class="kw">(</font>fread<font class="kw">(</font>$f<font class="kw">,</font>1<font class="kw">))!=</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Unknown compression method: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>ord<font class="kw">(</font>fread<font class="kw">(</font>$f<font class="kw">,</font>1<font class="kw">))!=</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Unknown filter method: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>ord<font class="kw">(</font>fread<font class="kw">(</font>$f<font class="kw">,</font>1<font class="kw">))!=</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Interlacing not supported: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>fread<font class="kw">(</font>$f<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$parms<font class="kw">=</font><font class="str">'/DecodeParms &lt;&lt;/Predictor 15 /Colors '</font><font class="kw">.(</font>$ct<font class="kw">==</font>2 <font class="kw">? </font>3 <font class="kw">: </font>1<font class="kw">).</font><font class="str">' /BitsPerComponent '</font><font class="kw">.</font>$bpc<font class="kw">.</font><font class="str">' /Columns '</font><font class="kw">.</font>$w<font class="kw">.</font><font class="str">'&gt;&gt;'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Scan chunks looking for palette, transparency and image data<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$pal<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$data<font class="kw">=</font><font class="str">''</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;do<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$n<font class="kw">=</font>$<font class="kw">this-&gt;</font>_freadint<font class="kw">(</font>$f<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$type<font class="kw">=</font>fread<font class="kw">(</font>$f<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$type<font class="kw">==</font><font class="str">'PLTE'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read palette<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pal<font class="kw">=</font>fread<font class="kw">(</font>$f<font class="kw">,</font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>fread<font class="kw">(</font>$f<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$type<font class="kw">==</font><font class="str">'tRNS'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read transparency info<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$t<font class="kw">=</font>fread<font class="kw">(</font>$f<font class="kw">,</font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$ct<font class="kw">==</font>0<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=array(</font>ord<font class="kw">(</font>substr<font class="kw">(</font>$t<font class="kw">,</font>1<font class="kw">,</font>1<font class="kw">)));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$ct<font class="kw">==</font>2<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=array(</font>ord<font class="kw">(</font>substr<font class="kw">(</font>$t<font class="kw">,</font>1<font class="kw">,</font>1<font class="kw">)),</font>ord<font class="kw">(</font>substr<font class="kw">(</font>$t<font class="kw">,</font>3<font class="kw">,</font>1<font class="kw">)),</font>ord<font class="kw">(</font>substr<font class="kw">(</font>$t<font class="kw">,</font>5<font class="kw">,</font>1<font class="kw">)));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$pos<font class="kw">=</font>strpos<font class="kw">(</font>$t<font class="kw">,</font>chr<font class="kw">(</font>0<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$pos<font class="kw">!==</font>false<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$trns<font class="kw">=array(</font>$pos<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>fread<font class="kw">(</font>$f<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$type<font class="kw">==</font><font class="str">'IDAT'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">//Read image data block<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$data<font class="kw">.=</font>fread<font class="kw">(</font>$f<font class="kw">,</font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>fread<font class="kw">(</font>$f<font class="kw">,</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(</font>$type<font class="kw">==</font><font class="str">'IEND'</font><font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>fread<font class="kw">(</font>$f<font class="kw">,</font>$n<font class="kw">+</font>4<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;while(</font>$n<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if(</font>$colspace<font class="kw">==</font><font class="str">'Indexed' </font><font class="kw">&amp;&amp; empty(</font>$pal<font class="kw">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'Missing palette in '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>fclose<font class="kw">(</font>$f<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;return array(</font><font class="str">'w'</font><font class="kw">=&gt;</font>$w<font class="kw">,</font><font class="str">'h'</font><font class="kw">=&gt;</font>$h<font class="kw">,</font><font class="str">'cs'</font><font class="kw">=&gt;</font>$colspace<font class="kw">,</font><font class="str">'bpc'</font><font class="kw">=&gt;</font>$bpc<font class="kw">,</font><font class="str">'f'</font><font class="kw">=&gt;</font><font class="str">'FlateDecode'</font><font class="kw">,</font><font class="str">'parms'</font><font class="kw">=&gt;</font>$parms<font class="kw">,</font><font class="str">'pal'</font><font class="kw">=&gt;</font>$pal<font class="kw">,</font><font class="str">'trns'</font><font class="kw">=&gt;</font>$trns<font class="kw">,</font><font class="str">'data'</font><font class="kw">=&gt;</font>$data<font class="kw">);<br>}<br><br>}<br><br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Example</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'image_alpha.php'</font><font class="kw">);<br><br></font>$pdf<font class="kw">=new </font>PDF_ImageAlpha<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>SetFont<font class="kw">(</font><font class="str">'Arial'</font><font class="kw">,</font><font class="str">''</font><font class="kw">,</font>16<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>MultiCell<font class="kw">(</font>0<font class="kw">,</font>8<font class="kw">, </font>str_repeat<font class="kw">(</font><font class="str">'Hello World! '</font><font class="kw">, </font>180<font class="kw">));<br><br></font><font class="cmt">// A) provide image + separate 8-bit mask (best quality!)<br><br>// first embed mask image (w, h, x and y will be ignored, the image will be scaled to the target image's size)<br></font>$maskImg <font class="kw">= </font>$pdf<font class="kw">-&gt;</font>Image<font class="kw">(</font><font class="str">'mask.png'</font><font class="kw">, </font>0<font class="kw">,</font>0<font class="kw">,</font>0<font class="kw">,</font>0<font class="kw">, </font><font class="str">''</font><font class="kw">, </font><font class="str">''</font><font class="kw">, </font>true<font class="kw">); <br></font><font class="cmt">// embed image, masked with previously embedded mask<br></font>$pdf<font class="kw">-&gt;</font>Image<font class="kw">(</font><font class="str">'image.png'</font><font class="kw">,</font>55<font class="kw">,</font>10<font class="kw">,</font>100<font class="kw">,</font>0<font class="kw">,</font><font class="str">''</font><font class="kw">,</font><font class="str">''</font><font class="kw">, </font>false<font class="kw">, </font>$maskImg<font class="kw">);<br><br></font><font class="cmt">// B) use alpha channel from PNG (alpha channel converted to 7-bit by GD, lower quality)<br></font>$pdf<font class="kw">-&gt;</font>ImagePngWithAlpha<font class="kw">(</font><font class="str">'image_with_alpha.png'</font><font class="kw">,</font>55<font class="kw">,</font>100<font class="kw">,</font>100<font class="kw">);<br><br></font><font class="cmt">// C) same as B), but using Image() method that recognizes the alpha channel<br></font>$pdf<font class="kw">-&gt;</font>Image<font class="kw">(</font><font class="str">'image_with_alpha.png'</font><font class="kw">,</font>55<font class="kw">,</font>190<font class="kw">,</font>100<font class="kw">);<br><br></font>$pdf<font class="kw">-&gt;</font>Output<font class="kw">();<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>
<BR>
View the result <A HREF="ex83.pdf" TARGET="_blank">here</A>.
<H4 CLASS="st">Download</H4><A HREF="script83.zip">ZIP</A> | <A HREF="script83.tgz">TGZ</A>
</BODY>
</HTML>
