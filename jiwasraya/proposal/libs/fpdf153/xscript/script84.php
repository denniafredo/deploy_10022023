<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>EPS / AI support</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY ONLOAD="if(window.focus) window.focus()">
<H2>EPS / AI support</H2>
<H4 CLASS="st">Informations</H4>Author: Valentin Schmidt<BR>License: Freeware
<H4 CLASS="st">Description</H4>This script allows to embed vector-based Adobe Illustrator (AI) or AI-compatible EPS
files. Only vector drawing is supported, not text or bitmap. Although the script was
successfully tested with various AI format versions, best results are probably achieved with
files that were exported in the AI3 format (tested with Illustrator CS2, Freehand MX
and Photoshop CS2).<BR>
<BR>
<TT>ImageEps(<B>string</B> file, <B>float</B> x, <B>float</B> y [, <B>float</B> w [, <B>float</B> h [, <B>string</B> link [, <B>boolean</B> useBoundingBox]]]])</TT><BR>
<BR>
Same parameters as for regular Image() method, with an additional one:<BR>
<BR>
<TT><U>useBoundingBox</U></TT>: specifies whether to position the bounding box (<TT>true</TT>) or
the complete canvas (<TT>false</TT>) at location (x,y). Default value is <TT>true</TT>.
<H4 CLASS="st">Source</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'fpdf.php'</font><font class="kw">);<br><br>class </font>PDF_EPS <font class="kw">extends </font>FPDF<font class="kw">{<br><br>function </font>ImageEps <font class="kw">(</font>$file<font class="kw">, </font>$x<font class="kw">, </font>$y<font class="kw">, </font>$w<font class="kw">=</font>0<font class="kw">, </font>$h<font class="kw">=</font>0<font class="kw">, </font>$link<font class="kw">=</font><font class="str">''</font><font class="kw">, </font>$useBoundingBox<font class="kw">=</font>true<font class="kw">){&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$data <font class="kw">= </font>file_get_contents<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$data<font class="kw">===</font>false<font class="kw">) </font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'EPS file not found: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// find BoundingBox params<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>ereg <font class="kw">(</font><font class="str">"%%BoundingBox: ([^\r\n]+)"</font><font class="kw">, </font>$data<font class="kw">, </font>$regs<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if (</font>count<font class="kw">(</font>$regs<font class="kw">)&gt;</font>1<font class="kw">) list(</font>$x1<font class="kw">,</font>$y1<font class="kw">,</font>$x2<font class="kw">,</font>$y2<font class="kw">) = </font>explode<font class="kw">(</font><font class="str">' '</font><font class="kw">, </font>$regs<font class="kw">[</font>1<font class="kw">]);<br>&nbsp;&nbsp;&nbsp;&nbsp;else </font>$<font class="kw">this-&gt;</font>Error<font class="kw">(</font><font class="str">'No BoundingBox found in EPS file: '</font><font class="kw">.</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$start <font class="kw">= </font>strpos<font class="kw">(</font>$data<font class="kw">, </font><font class="str">'%%EndSetup'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$start<font class="kw">===</font>false<font class="kw">) </font>$start <font class="kw">= </font>strpos<font class="kw">(</font>$data<font class="kw">, </font><font class="str">'%%EndProlog'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$start<font class="kw">===</font>false<font class="kw">) </font>$start <font class="kw">= </font>strpos<font class="kw">(</font>$data<font class="kw">, </font><font class="str">'%%BoundingBox'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$data <font class="kw">= </font>substr<font class="kw">(</font>$data<font class="kw">, </font>$start<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$end <font class="kw">= </font>strpos<font class="kw">(</font>$data<font class="kw">, </font><font class="str">'%%PageTrailer'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$end<font class="kw">===</font>false<font class="kw">) </font>$end <font class="kw">= </font>strpos<font class="kw">(</font>$data<font class="kw">, </font><font class="str">'showpage'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$end<font class="kw">) </font>$data <font class="kw">= </font>substr<font class="kw">(</font>$data<font class="kw">, </font>0<font class="kw">, </font>$end<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// save the current graphic state<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'q'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$k <font class="kw">= </font>$<font class="kw">this-&gt;</font>k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Translate<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">if (</font>$useBoundingBox<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dx <font class="kw">= </font>$x<font class="kw">*</font>$k<font class="kw">-</font>$x1<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dy <font class="kw">= </font>$<font class="kw">this-&gt;</font>hPt<font class="kw">-</font>$y2<font class="kw">-</font>$y<font class="kw">*</font>$k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}else{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dx <font class="kw">= </font>$x<font class="kw">*</font>$k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$dy <font class="kw">= -</font>$y<font class="kw">*</font>$k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$tm <font class="kw">= array(</font>1<font class="kw">,</font>0<font class="kw">,</font>0<font class="kw">,</font>1<font class="kw">,</font>$dx<font class="kw">,</font>$dy<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'%.3f %.3f %.3f %.3f %.3f %.3f cm'</font><font class="kw">, </font>$tm<font class="kw">[</font>0<font class="kw">],</font>$tm<font class="kw">[</font>1<font class="kw">],</font>$tm<font class="kw">[</font>2<font class="kw">],</font>$tm<font class="kw">[</font>3<font class="kw">],</font>$tm<font class="kw">[</font>4<font class="kw">],</font>$tm<font class="kw">[</font>5<font class="kw">]));<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$w<font class="kw">&gt;</font>0<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$scale_x <font class="kw">= </font>$w<font class="kw">/((</font>$x2<font class="kw">-</font>$x1<font class="kw">)/</font>$k<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$h<font class="kw">&gt;</font>0<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$scale_y <font class="kw">= </font>$h<font class="kw">/((</font>$y2<font class="kw">-</font>$y1<font class="kw">)/</font>$k<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$scale_y <font class="kw">= </font>$scale_x<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h <font class="kw">= (</font>$y2<font class="kw">-</font>$y1<font class="kw">)/</font>$k <font class="kw">* </font>$scale_y<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}else{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$h<font class="kw">&gt;</font>0<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$scale_y <font class="kw">= </font>$h<font class="kw">/((</font>$y2<font class="kw">-</font>$y1<font class="kw">)/</font>$k<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$scale_x <font class="kw">= </font>$scale_y<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w <font class="kw">= (</font>$x2<font class="kw">-</font>$x1<font class="kw">)/</font>$k <font class="kw">* </font>$scale_x<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$w <font class="kw">= (</font>$x2<font class="kw">-</font>$x1<font class="kw">)/</font>$k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$h <font class="kw">= (</font>$y2<font class="kw">-</font>$y1<font class="kw">)/</font>$k<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;if (isset(</font>$scale_x<font class="kw">)) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// Scale<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$tm <font class="kw">= array(</font>$scale_x<font class="kw">,</font>0<font class="kw">,</font>0<font class="kw">,</font>$scale_y<font class="kw">,</font>0<font class="kw">,</font>$<font class="kw">this-&gt;</font>hPt<font class="kw">*(</font>1<font class="kw">-</font>$scale_y<font class="kw">));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>sprintf<font class="kw">(</font><font class="str">'%.3f %.3f %.3f %.3f %.3f %.3f cm'</font><font class="kw">, </font>$tm<font class="kw">[</font>0<font class="kw">],</font>$tm<font class="kw">[</font>1<font class="kw">],</font>$tm<font class="kw">[</font>2<font class="kw">],</font>$tm<font class="kw">[</font>3<font class="kw">],</font>$tm<font class="kw">[</font>4<font class="kw">],</font>$tm<font class="kw">[</font>5<font class="kw">]));<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$lines <font class="kw">= </font>split <font class="kw">(</font><font class="str">"\r\n|[\r\n]"</font><font class="kw">, </font>$data<font class="kw">); </font><font class="cmt">// pc/unix/mac line endings<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="kw">foreach (</font>$lines <font class="kw">as </font>$line<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$line<font class="kw">==</font><font class="str">'' </font><font class="kw">|| </font>$line<font class="kw">{</font>0<font class="kw">}==</font><font class="str">'%'</font><font class="kw">) continue;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$len <font class="kw">= </font>strlen<font class="kw">(</font>$line<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$len<font class="kw">&gt;</font>2 <font class="kw">&amp;&amp; </font>$line<font class="kw">{</font>$len<font class="kw">-</font>2<font class="kw">}!=</font><font class="str">' '</font><font class="kw">) continue;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$cmd <font class="kw">= </font>$line<font class="kw">{</font>$len<font class="kw">-</font>1<font class="kw">};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (</font>$cmd<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'m'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'l'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'v'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'y'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'c'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'k'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'K'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'g'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'G'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'s'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'S'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'J'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'j'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'w'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'M'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'d' </font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$line<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'L'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$line<font class="kw">{</font>$len<font class="kw">-</font>1<font class="kw">}=</font><font class="str">'l'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$line<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'C'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$line<font class="kw">{</font>$len<font class="kw">-</font>1<font class="kw">}=</font><font class="str">'c'</font><font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$line<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'f'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'F'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'f*'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'b'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case </font><font class="str">'B'</font><font class="kw">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font>$cmd <font class="kw">. </font><font class="str">'*'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font class="cmt">// restore previous graphic state<br>&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>_out<font class="kw">(</font><font class="str">'Q'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$link<font class="kw">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$<font class="kw">this-&gt;</font>Link<font class="kw">(</font>$x<font class="kw">,</font>$y<font class="kw">,</font>$w<font class="kw">,</font>$h<font class="kw">,</font>$link<font class="kw">);<br>}<br><br>}<br><br></font><font class="cmt">// for backward compatibility<br></font><font class="kw">if (!</font>function_exists<font class="kw">(</font><font class="str">'file_get_contents'</font><font class="kw">)){<br>&nbsp;&nbsp;&nbsp;&nbsp;function </font>file_get_contents<font class="kw">(</font>$filename<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$file <font class="kw">= </font>fopen<font class="kw">(</font>$filename<font class="kw">, </font><font class="str">'rb'</font><font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</font>$file<font class="kw">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$fsize <font class="kw">= </font>filesize<font class="kw">(</font>$filename<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>$data <font class="kw">= </font>fread<font class="kw">(</font>$file<font class="kw">, </font>$fsize<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>fclose<font class="kw">(</font>$file<font class="kw">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>$data<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return </font>false<font class="kw">;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>

<H4 CLASS="st">Example</H4><TABLE WIDTH="100%" STYLE="color:#4040C0; border-style:ridge" BORDERCOLORLIGHT="#B0B0E0" BORDERCOLORDARK="#000000" BORDER="2" CELLPADDING=6 CELLSPACING=0 BGCOLOR="#F0F5FF"><TR><TD style="border-width:0px">
<NOBR><code><font color="#000000">
&lt;?php<br><font class="kw">require(</font><font class="str">'fpdf_eps.php'</font><font class="kw">);<br><br></font>$pdf<font class="kw">=new </font>PDF_EPS<font class="kw">();<br><br></font><font class="cmt">// Page 1: AI<br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>ImageEps<font class="kw">(</font><font class="str">'pelican.ai'</font><font class="kw">, </font>15<font class="kw">, </font>70<font class="kw">, </font>180<font class="kw">);<br><br></font><font class="cmt">// Page 2: EPS, with link<br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$lnk <font class="kw">= </font>$pdf<font class="kw">-&gt;</font>AddLink<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>ImageEps<font class="kw">(</font><font class="str">'bug.eps'</font><font class="kw">, </font>30<font class="kw">, </font>20<font class="kw">, </font>150<font class="kw">, </font>0<font class="kw">, </font>$lnk<font class="kw">);<br><br></font><font class="cmt">// Page 3: AI<br></font>$pdf<font class="kw">-&gt;</font>AddPage<font class="kw">();<br></font>$pdf<font class="kw">-&gt;</font>SetLink<font class="kw">(</font>$lnk<font class="kw">);<br></font>$pdf<font class="kw">-&gt;</font>ImageEps<font class="kw">(</font><font class="str">'tiger.ai'</font><font class="kw">, </font>10<font class="kw">, </font>50<font class="kw">, </font>190<font class="kw">);<br><br></font>$pdf<font class="kw">-&gt;</font>Output<font class="kw">();<br></font>?&gt;
</font>
</code></NOBR></TD></TR></TABLE>
<BR>
View the result <A HREF="ex84.pdf" TARGET="_blank">here</A>.
<H4 CLASS="st">Download</H4><A HREF="script84.zip">ZIP</A> | <A HREF="script84.tgz">TGZ</A>
</BODY>
</HTML>
